<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="349"><g><title>`0x7FFE659AAA40 (3 samples, 0.86%)</title><rect x="0.0000%" y="917" width="0.8596%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="927.50"></text></g><g><title>`0x7FFE659B2308 (1 samples, 0.29%)</title><rect x="0.8596%" y="869" width="0.2865%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="1"/><text x="1.1096%" y="879.50"></text></g><g><title>`0x7FFE6599E712 (1 samples, 0.29%)</title><rect x="0.8596%" y="853" width="0.2865%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="1"/><text x="1.1096%" y="863.50"></text></g><g><title>`0x7FFE65984ED6 (1 samples, 0.29%)</title><rect x="0.8596%" y="837" width="0.2865%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="1"/><text x="1.1096%" y="847.50"></text></g><g><title>`0x7FFE659F1CC4 (1 samples, 0.29%)</title><rect x="0.8596%" y="821" width="0.2865%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="1"/><text x="1.1096%" y="831.50"></text></g><g><title>`0x7FFE65960D72 (1 samples, 0.29%)</title><rect x="1.1461%" y="853" width="0.2865%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="1"/><text x="1.3961%" y="863.50"></text></g><g><title>`0x7FFE65976ACF (1 samples, 0.29%)</title><rect x="1.1461%" y="837" width="0.2865%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="1"/><text x="1.3961%" y="847.50"></text></g><g><title>`0x7FFE65960E7B (1 samples, 0.29%)</title><rect x="1.4327%" y="837" width="0.2865%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="1"/><text x="1.6827%" y="847.50"></text></g><g><title>`0x7FFE65973C47 (1 samples, 0.29%)</title><rect x="1.4327%" y="821" width="0.2865%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="1"/><text x="1.6827%" y="831.50"></text></g><g><title>`0x7FFE65985976 (4 samples, 1.15%)</title><rect x="0.8596%" y="885" width="1.1461%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="4"/><text x="1.1096%" y="895.50"></text></g><g><title>`0x7FFE659B23DA (3 samples, 0.86%)</title><rect x="1.1461%" y="869" width="0.8596%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="3"/><text x="1.3961%" y="879.50"></text></g><g><title>`0x7FFE65960DBB (2 samples, 0.57%)</title><rect x="1.4327%" y="853" width="0.5731%" height="15" fill="rgb(240,193,28)" fg:x="5" fg:w="2"/><text x="1.6827%" y="863.50"></text></g><g><title>`0x7FFE65960F80 (1 samples, 0.29%)</title><rect x="1.7192%" y="837" width="0.2865%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="1"/><text x="1.9692%" y="847.50"></text></g><g><title>`0x7FFE65960AEE (1 samples, 0.29%)</title><rect x="1.7192%" y="821" width="0.2865%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="1"/><text x="1.9692%" y="831.50"></text></g><g><title>`0x7FFE6597DB41 (1 samples, 0.29%)</title><rect x="1.7192%" y="805" width="0.2865%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="1"/><text x="1.9692%" y="815.50"></text></g><g><title>`0x7FFE6597A3F7 (1 samples, 0.29%)</title><rect x="1.7192%" y="789" width="0.2865%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="1"/><text x="1.9692%" y="799.50"></text></g><g><title>`0x7FFE6597AC39 (1 samples, 0.29%)</title><rect x="1.7192%" y="773" width="0.2865%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="1"/><text x="1.9692%" y="783.50"></text></g><g><title>`0x7FFE659EF4F4 (1 samples, 0.29%)</title><rect x="1.7192%" y="757" width="0.2865%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="1"/><text x="1.9692%" y="767.50"></text></g><g><title>`0x7FFE6597C244 (1 samples, 0.29%)</title><rect x="2.0057%" y="693" width="0.2865%" height="15" fill="rgb(221,200,47)" fg:x="7" fg:w="1"/><text x="2.2557%" y="703.50"></text></g><g><title>`0x7FFE6597C0BA (1 samples, 0.29%)</title><rect x="2.0057%" y="677" width="0.2865%" height="15" fill="rgb(226,26,5)" fg:x="7" fg:w="1"/><text x="2.2557%" y="687.50"></text></g><g><title>`0x7FFE6597C4BC (1 samples, 0.29%)</title><rect x="2.0057%" y="661" width="0.2865%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="1"/><text x="2.2557%" y="671.50"></text></g><g><title>`0x7FFE659EF254 (1 samples, 0.29%)</title><rect x="2.0057%" y="645" width="0.2865%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="1"/><text x="2.2557%" y="655.50"></text></g><g><title>`0x7FFE659788C4 (2 samples, 0.57%)</title><rect x="2.0057%" y="757" width="0.5731%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="2"/><text x="2.2557%" y="767.50"></text></g><g><title>`0x7FFE65960EAF (2 samples, 0.57%)</title><rect x="2.0057%" y="741" width="0.5731%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="2"/><text x="2.2557%" y="751.50"></text></g><g><title>`0x7FFE659610E0 (2 samples, 0.57%)</title><rect x="2.0057%" y="725" width="0.5731%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="2"/><text x="2.2557%" y="735.50"></text></g><g><title>`0x7FFE659606FF (2 samples, 0.57%)</title><rect x="2.0057%" y="709" width="0.5731%" height="15" fill="rgb(249,31,29)" fg:x="7" fg:w="2"/><text x="2.2557%" y="719.50"></text></g><g><title>`0x7FFE6597C3E8 (1 samples, 0.29%)</title><rect x="2.2923%" y="693" width="0.2865%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="1"/><text x="2.5423%" y="703.50"></text></g><g><title>`0x7FFE659746AB (1 samples, 0.29%)</title><rect x="2.2923%" y="677" width="0.2865%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="1"/><text x="2.5423%" y="687.50"></text></g><g><title>`0x7FFE659748F6 (1 samples, 0.29%)</title><rect x="2.2923%" y="661" width="0.2865%" height="15" fill="rgb(214,148,48)" fg:x="8" fg:w="1"/><text x="2.5423%" y="671.50"></text></g><g><title>`0x7FFE65974E61 (1 samples, 0.29%)</title><rect x="2.2923%" y="645" width="0.2865%" height="15" fill="rgb(232,36,49)" fg:x="8" fg:w="1"/><text x="2.5423%" y="655.50"></text></g><g><title>`0x7FFE659697DA (1 samples, 0.29%)</title><rect x="2.2923%" y="629" width="0.2865%" height="15" fill="rgb(209,103,24)" fg:x="8" fg:w="1"/><text x="2.5423%" y="639.50"></text></g><g><title>`0x7FFE6596993B (1 samples, 0.29%)</title><rect x="2.2923%" y="613" width="0.2865%" height="15" fill="rgb(229,88,8)" fg:x="8" fg:w="1"/><text x="2.5423%" y="623.50"></text></g><g><title>`0x7FFE6596451B (1 samples, 0.29%)</title><rect x="2.2923%" y="597" width="0.2865%" height="15" fill="rgb(213,181,19)" fg:x="8" fg:w="1"/><text x="2.5423%" y="607.50"></text></g><g><title>`0x7FFE633ABA90 (3 samples, 0.86%)</title><rect x="2.0057%" y="853" width="0.8596%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="3"/><text x="2.2557%" y="863.50"></text></g><g><title>`0x7FFE633B8F91 (3 samples, 0.86%)</title><rect x="2.0057%" y="837" width="0.8596%" height="15" fill="rgb(241,83,37)" fg:x="7" fg:w="3"/><text x="2.2557%" y="847.50"></text></g><g><title>`0x7FFE633B1843 (3 samples, 0.86%)</title><rect x="2.0057%" y="821" width="0.8596%" height="15" fill="rgb(233,36,39)" fg:x="7" fg:w="3"/><text x="2.2557%" y="831.50"></text></g><g><title>`0x7FFE62EE5EF2 (3 samples, 0.86%)</title><rect x="2.0057%" y="805" width="0.8596%" height="15" fill="rgb(226,3,54)" fg:x="7" fg:w="3"/><text x="2.2557%" y="815.50"></text></g><g><title>`0x7FFE6597A24A (3 samples, 0.86%)</title><rect x="2.0057%" y="789" width="0.8596%" height="15" fill="rgb(245,192,40)" fg:x="7" fg:w="3"/><text x="2.2557%" y="799.50"></text></g><g><title>`0x7FFE65968C9C (3 samples, 0.86%)</title><rect x="2.0057%" y="773" width="0.8596%" height="15" fill="rgb(238,167,29)" fg:x="7" fg:w="3"/><text x="2.2557%" y="783.50"></text></g><g><title>`0x7FFE65978930 (1 samples, 0.29%)</title><rect x="2.5788%" y="757" width="0.2865%" height="15" fill="rgb(232,182,51)" fg:x="9" fg:w="1"/><text x="2.8288%" y="767.50"></text></g><g><title>`0x7FFE6597D61D (1 samples, 0.29%)</title><rect x="2.5788%" y="741" width="0.2865%" height="15" fill="rgb(231,60,39)" fg:x="9" fg:w="1"/><text x="2.8288%" y="751.50"></text></g><g><title>`0x7FFE659BCE80 (1 samples, 0.29%)</title><rect x="2.5788%" y="725" width="0.2865%" height="15" fill="rgb(208,69,12)" fg:x="9" fg:w="1"/><text x="2.8288%" y="735.50"></text></g><g><title>`0x7FFE659BCE0E (1 samples, 0.29%)</title><rect x="2.5788%" y="709" width="0.2865%" height="15" fill="rgb(235,93,37)" fg:x="9" fg:w="1"/><text x="2.8288%" y="719.50"></text></g><g><title>`0x7FFE659BD05D (1 samples, 0.29%)</title><rect x="2.5788%" y="693" width="0.2865%" height="15" fill="rgb(213,116,39)" fg:x="9" fg:w="1"/><text x="2.8288%" y="703.50"></text></g><g><title>`0x7FFE6597868F (1 samples, 0.29%)</title><rect x="2.5788%" y="677" width="0.2865%" height="15" fill="rgb(222,207,29)" fg:x="9" fg:w="1"/><text x="2.8288%" y="687.50"></text></g><g><title>`0x7FFE643D7BE7 (1 samples, 0.29%)</title><rect x="2.5788%" y="661" width="0.2865%" height="15" fill="rgb(206,96,30)" fg:x="9" fg:w="1"/><text x="2.8288%" y="671.50"></text></g><g><title>`0x7FFE643D7EE3 (1 samples, 0.29%)</title><rect x="2.5788%" y="645" width="0.2865%" height="15" fill="rgb(218,138,4)" fg:x="9" fg:w="1"/><text x="2.8288%" y="655.50"></text></g><g><title>`0x7FFE643EC5A8 (1 samples, 0.29%)</title><rect x="2.5788%" y="629" width="0.2865%" height="15" fill="rgb(250,191,14)" fg:x="9" fg:w="1"/><text x="2.8288%" y="639.50"></text></g><g><title>`0x7FFE62F351B2 (1 samples, 0.29%)</title><rect x="2.5788%" y="613" width="0.2865%" height="15" fill="rgb(239,60,40)" fg:x="9" fg:w="1"/><text x="2.8288%" y="623.50"></text></g><g><title>`0x7FFE65997DE9 (1 samples, 0.29%)</title><rect x="2.5788%" y="597" width="0.2865%" height="15" fill="rgb(206,27,48)" fg:x="9" fg:w="1"/><text x="2.8288%" y="607.50"></text></g><g><title>`0x7FFE659965D6 (1 samples, 0.29%)</title><rect x="2.5788%" y="581" width="0.2865%" height="15" fill="rgb(225,35,8)" fg:x="9" fg:w="1"/><text x="2.8288%" y="591.50"></text></g><g><title>`0x7FFE659EF114 (1 samples, 0.29%)</title><rect x="2.5788%" y="565" width="0.2865%" height="15" fill="rgb(250,213,24)" fg:x="9" fg:w="1"/><text x="2.8288%" y="575.50"></text></g><g><title>`0x7FFE633ABCD9 (4 samples, 1.15%)</title><rect x="2.0057%" y="869" width="1.1461%" height="15" fill="rgb(247,123,22)" fg:x="7" fg:w="4"/><text x="2.2557%" y="879.50"></text></g><g><title>`0x7FFE633ABAC0 (1 samples, 0.29%)</title><rect x="2.8653%" y="853" width="0.2865%" height="15" fill="rgb(231,138,38)" fg:x="10" fg:w="1"/><text x="3.1153%" y="863.50"></text></g><g><title>`0x7FFE647182AB (1 samples, 0.29%)</title><rect x="2.8653%" y="837" width="0.2865%" height="15" fill="rgb(231,145,46)" fg:x="10" fg:w="1"/><text x="3.1153%" y="847.50"></text></g><g><title>`0x7FFE659A0C34 (1 samples, 0.29%)</title><rect x="2.8653%" y="821" width="0.2865%" height="15" fill="rgb(251,118,11)" fg:x="10" fg:w="1"/><text x="3.1153%" y="831.50"></text></g><g><title>`0x7FFE659EF2D4 (1 samples, 0.29%)</title><rect x="2.8653%" y="805" width="0.2865%" height="15" fill="rgb(217,147,25)" fg:x="10" fg:w="1"/><text x="3.1153%" y="815.50"></text></g><g><title>`0x7FFE633B4EAD (1 samples, 0.29%)</title><rect x="3.1519%" y="869" width="0.2865%" height="15" fill="rgb(247,81,37)" fg:x="11" fg:w="1"/><text x="3.4019%" y="879.50"></text></g><g><title>iteration.exe`pre_cpp_initialization() (1 samples, 0.29%)</title><rect x="3.1519%" y="853" width="0.2865%" height="15" fill="rgb(209,12,38)" fg:x="11" fg:w="1"/><text x="3.4019%" y="863.50"></text></g><g><title>`0x7FFE62F31D9B (1 samples, 0.29%)</title><rect x="3.1519%" y="837" width="0.2865%" height="15" fill="rgb(227,1,9)" fg:x="11" fg:w="1"/><text x="3.4019%" y="847.50"></text></g><g><title>`0x7FFE62F31F62 (1 samples, 0.29%)</title><rect x="3.1519%" y="821" width="0.2865%" height="15" fill="rgb(248,47,43)" fg:x="11" fg:w="1"/><text x="3.4019%" y="831.50"></text></g><g><title>`0x7FFE62F32030 (1 samples, 0.29%)</title><rect x="3.1519%" y="805" width="0.2865%" height="15" fill="rgb(221,10,30)" fg:x="11" fg:w="1"/><text x="3.4019%" y="815.50"></text></g><g><title>iteration.exe`bevy_ecs::change_detection::impl$48::set_changed(bevy_ecs::change_detection::Mut (19 samples, 5.44%)</title><rect x="3.4384%" y="693" width="5.4441%" height="15" fill="rgb(210,229,1)" fg:x="12" fg:w="19"/><text x="3.6884%" y="703.50">iterati..</text></g><g><title>iteration.exe`smallvec::impl$36::drop&lt;array$&lt;enum2$&lt;bevy_ecs::term_query::terms::FetchedTerm&gt;,12&gt; &gt;(smallvec::SmallVec&lt;array$&lt;enum2$ (16 samples, 4.58%)</title><rect x="4.2980%" y="677" width="4.5845%" height="15" fill="rgb(222,148,37)" fg:x="15" fg:w="16"/><text x="4.5480%" y="687.50">itera..</text></g><g><title>iteration.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;enum2$ (5 samples, 1.43%)</title><rect x="7.4499%" y="661" width="1.4327%" height="15" fill="rgb(234,67,33)" fg:x="26" fg:w="5"/><text x="7.6999%" y="671.50"></text></g><g><title>iteration.exe`bevy_ecs::change_detection::impl$49::deref_mut(bevy_ecs::change_detection::Mut (24 samples, 6.88%)</title><rect x="3.4384%" y="709" width="6.8768%" height="15" fill="rgb(247,98,35)" fg:x="12" fg:w="24"/><text x="3.6884%" y="719.50">iteration..</text></g><g><title>iteration.exe`core::ops::arith::impl$308::add_assign (5 samples, 1.43%)</title><rect x="8.8825%" y="693" width="1.4327%" height="15" fill="rgb(247,138,52)" fg:x="31" fg:w="5"/><text x="9.1325%" y="703.50"></text></g><g><title>iteration.exe`bevy_ptr::ThinSlicePtr&lt;core::cell::UnsafeCell&lt;bevy_ecs::component::Tick&gt; &gt;::get(bevy_ptr::ThinSlicePtr&lt;core::cell::UnsafeCell (5 samples, 1.43%)</title><rect x="24.6418%" y="597" width="1.4327%" height="15" fill="rgb(213,79,30)" fg:x="86" fg:w="5"/><text x="24.8918%" y="607.50"></text></g><g><title>iteration.exe`core::ptr::mut_ptr::impl$0::add(core::cell::UnsafeCell (5 samples, 1.43%)</title><rect x="24.6418%" y="581" width="1.4327%" height="15" fill="rgb(246,177,23)" fg:x="86" fg:w="5"/><text x="24.8918%" y="591.50"></text></g><g><title>iteration.exe`core::ptr::mut_ptr::impl$0::offset(core::cell::UnsafeCell (5 samples, 1.43%)</title><rect x="24.6418%" y="565" width="1.4327%" height="15" fill="rgb(230,62,27)" fg:x="86" fg:w="5"/><text x="24.8918%" y="575.50"></text></g><g><title>iteration.exe`bevy_ecs::term_query::terms::component::ComponentTerm::get_change_ticks (8 samples, 2.29%)</title><rect x="24.6418%" y="613" width="2.2923%" height="15" fill="rgb(216,154,8)" fg:x="86" fg:w="8"/><text x="24.8918%" y="623.50">i..</text></g><g><title>iteration.exe`enum2$&lt;core::option::Option&lt;enum2$&lt;bevy_ecs::term_query::terms::component::StoragePtr&gt; &gt; &gt;::as_ref (3 samples, 0.86%)</title><rect x="26.0745%" y="597" width="0.8596%" height="15" fill="rgb(244,35,45)" fg:x="91" fg:w="3"/><text x="26.3245%" y="607.50"></text></g><g><title>iteration.exe`bevy_ecs::term_query::terms::impl$2::fetch(enum2$&lt;bevy_ecs::term_query::terms::Term&gt;*, enum2$ (40 samples, 11.46%)</title><rect x="16.3324%" y="645" width="11.4613%" height="15" fill="rgb(251,115,12)" fg:x="57" fg:w="40"/><text x="16.5824%" y="655.50">iteration.exe`bev..</text></g><g><title>iteration.exe`bevy_ecs::term_query::terms::component::impl$2::fetch (19 samples, 5.44%)</title><rect x="22.3496%" y="629" width="5.4441%" height="15" fill="rgb(240,54,50)" fg:x="78" fg:w="19"/><text x="22.5996%" y="639.50">iterati..</text></g><g><title>iteration.exe`bevy_ecs::term_query::terms::component::ComponentTerm::get_component (3 samples, 0.86%)</title><rect x="26.9341%" y="613" width="0.8596%" height="15" fill="rgb(233,84,52)" fg:x="94" fg:w="3"/><text x="27.1841%" y="623.50"></text></g><g><title>iteration.exe`core::iter::range::impl$3::next(core::ops::range::Range (10 samples, 2.87%)</title><rect x="27.7937%" y="645" width="2.8653%" height="15" fill="rgb(207,117,47)" fg:x="97" fg:w="10"/><text x="28.0437%" y="655.50">it..</text></g><g><title>iteration.exe`core::iter::range::impl$2::spec_next(core::ops::range::Range (10 samples, 2.87%)</title><rect x="27.7937%" y="629" width="2.8653%" height="15" fill="rgb(249,43,39)" fg:x="97" fg:w="10"/><text x="28.0437%" y="639.50">it..</text></g><g><title>iteration.exe`core::cmp::impls::impl$54::lt (10 samples, 2.87%)</title><rect x="27.7937%" y="613" width="2.8653%" height="15" fill="rgb(209,38,44)" fg:x="97" fg:w="10"/><text x="28.0437%" y="623.50">it..</text></g><g><title>iteration.exe`core::ptr::mut_ptr::impl$0::add(enum2$ (45 samples, 12.89%)</title><rect x="32.9513%" y="629" width="12.8940%" height="15" fill="rgb(236,212,23)" fg:x="115" fg:w="45"/><text x="33.2013%" y="639.50">iteration.exe`core:..</text></g><g><title>iteration.exe`smallvec::SmallVec&lt;array$&lt;enum2$&lt;bevy_ecs::term_query::terms::FetchedTerm&gt;,12&gt; &gt;::push(enum2$ (66 samples, 18.91%)</title><rect x="30.6590%" y="645" width="18.9112%" height="15" fill="rgb(242,79,21)" fg:x="107" fg:w="66"/><text x="30.9090%" y="655.50">iteration.exe`smallvec::SmallV..</text></g><g><title>iteration.exe`smallvec::SmallVec&lt;array$&lt;enum2$&lt;bevy_ecs::term_query::terms::FetchedTerm&gt;,12&gt; &gt;::triple_mut (13 samples, 3.72%)</title><rect x="45.8453%" y="629" width="3.7249%" height="15" fill="rgb(211,96,35)" fg:x="160" fg:w="13"/><text x="46.0953%" y="639.50">iter..</text></g><g><title>iteration.exe`smallvec::SmallVec&lt;array$&lt;enum2$&lt;bevy_ecs::term_query::terms::FetchedTerm&gt;,12&gt; &gt;::spilled (3 samples, 0.86%)</title><rect x="48.7106%" y="613" width="0.8596%" height="15" fill="rgb(253,215,40)" fg:x="170" fg:w="3"/><text x="48.9606%" y="623.50"></text></g><g><title>iteration.exe`smallvec::SmallVec&lt;array$&lt;enum2$&lt;bevy_ecs::term_query::terms::FetchedTerm&gt;,12&gt; &gt;::new (1 samples, 0.29%)</title><rect x="49.5702%" y="629" width="0.2865%" height="15" fill="rgb(211,81,21)" fg:x="173" fg:w="1"/><text x="49.8202%" y="639.50"></text></g><g><title>iteration.exe`bevy_ecs::term_query::state::TermQueryState&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt;::fetch(smallvec::SmallVec&lt;array$&lt;enum2$ (125 samples, 35.82%)</title><rect x="14.3266%" y="661" width="35.8166%" height="15" fill="rgb(208,190,38)" fg:x="50" fg:w="125"/><text x="14.5766%" y="671.50">iteration.exe`bevy_ecs::term_query::state::TermQueryState&lt;..</text></g><g><title>iteration.exe`smallvec::SmallVec&lt;array$&lt;enum2$&lt;bevy_ecs::term_query::terms::FetchedTerm&gt;,12&gt; &gt;::with_capacity (2 samples, 0.57%)</title><rect x="49.5702%" y="645" width="0.5731%" height="15" fill="rgb(235,213,38)" fg:x="173" fg:w="2"/><text x="49.8202%" y="655.50"></text></g><g><title>iteration.exe`smallvec::SmallVec&lt;array$&lt;enum2$&lt;bevy_ecs::term_query::terms::FetchedTerm&gt;,12&gt; &gt;::reserve_exact (1 samples, 0.29%)</title><rect x="49.8567%" y="629" width="0.2865%" height="15" fill="rgb(237,122,38)" fg:x="174" fg:w="1"/><text x="50.1067%" y="639.50"></text></g><g><title>iteration.exe`smallvec::infallible(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$ (1 samples, 0.29%)</title><rect x="49.8567%" y="613" width="0.2865%" height="15" fill="rgb(244,218,35)" fg:x="174" fg:w="1"/><text x="50.1067%" y="623.50"></text></g><g><title>iteration.exe`bevy_ecs::term_query::terms::impl$2::filter_fetch(enum2$&lt;bevy_ecs::term_query::terms::Term&gt;*, enum2$ (4 samples, 1.15%)</title><rect x="53.0086%" y="645" width="1.1461%" height="15" fill="rgb(240,68,47)" fg:x="185" fg:w="4"/><text x="53.2586%" y="655.50"></text></g><g><title>iteration.exe`bevy_ecs::term_query::terms::component::impl$2::filter_fetch (1 samples, 0.29%)</title><rect x="53.8682%" y="629" width="0.2865%" height="15" fill="rgb(210,16,53)" fg:x="188" fg:w="1"/><text x="54.1182%" y="639.50"></text></g><g><title>iteration.exe`core::iter::range::impl$3::next(core::ops::range::Range (4 samples, 1.15%)</title><rect x="54.1547%" y="645" width="1.1461%" height="15" fill="rgb(235,124,12)" fg:x="189" fg:w="4"/><text x="54.4047%" y="655.50"></text></g><g><title>iteration.exe`core::iter::range::impl$2::spec_next(core::ops::range::Range (4 samples, 1.15%)</title><rect x="54.1547%" y="629" width="1.1461%" height="15" fill="rgb(224,169,11)" fg:x="189" fg:w="4"/><text x="54.4047%" y="639.50"></text></g><g><title>iteration.exe`core::cmp::impls::impl$54::lt (1 samples, 0.29%)</title><rect x="55.0143%" y="613" width="0.2865%" height="15" fill="rgb(250,166,2)" fg:x="192" fg:w="1"/><text x="55.2643%" y="623.50"></text></g><g><title>iteration.exe`bevy_ecs::term_query::iter::impl$2::next (158 samples, 45.27%)</title><rect x="10.3152%" y="693" width="45.2722%" height="15" fill="rgb(242,216,29)" fg:x="36" fg:w="158"/><text x="10.5652%" y="703.50">iteration.exe`bevy_ecs::term_query::iter::impl$2::next</text></g><g><title>iteration.exe`bevy_ecs::term_query::iter::TermQueryCursor::next(bevy_ecs::storage::table::Tables*, bevy_ecs::archetype::Archetypes*, bevy_ecs::term_query::state::TermQueryState&lt;tuple$&lt;&gt;,tuple$ (152 samples, 43.55%)</title><rect x="12.0344%" y="677" width="43.5530%" height="15" fill="rgb(230,116,27)" fg:x="42" fg:w="152"/><text x="12.2844%" y="687.50">iteration.exe`bevy_ecs::term_query::iter::TermQueryCursor::next(bevy_ec..</text></g><g><title>iteration.exe`bevy_ecs::term_query::state::TermQueryState&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt;::filter_fetch(smallvec::SmallVec&lt;array$&lt;enum2$ (19 samples, 5.44%)</title><rect x="50.1433%" y="661" width="5.4441%" height="15" fill="rgb(228,99,48)" fg:x="175" fg:w="19"/><text x="50.3933%" y="671.50">iterati..</text></g><g><title>iteration.exe`smallvec::SmallVec&lt;array$&lt;enum2$&lt;bevy_ecs::term_query::terms::Term&gt;,12&gt; &gt;::len (1 samples, 0.29%)</title><rect x="55.3009%" y="645" width="0.2865%" height="15" fill="rgb(253,11,6)" fg:x="193" fg:w="1"/><text x="55.5509%" y="655.50"></text></g><g><title>iteration.exe`smallvec::SmallVec&lt;array$&lt;enum2$&lt;bevy_ecs::term_query::terms::Term&gt;,12&gt; &gt;::triple (1 samples, 0.29%)</title><rect x="55.3009%" y="629" width="0.2865%" height="15" fill="rgb(247,143,39)" fg:x="193" fg:w="1"/><text x="55.5509%" y="639.50"></text></g><g><title>iteration.exe`smallvec::SmallVec&lt;array$&lt;enum2$&lt;bevy_ecs::term_query::terms::Term&gt;,12&gt; &gt;::spilled (1 samples, 0.29%)</title><rect x="55.3009%" y="613" width="0.2865%" height="15" fill="rgb(236,97,10)" fg:x="193" fg:w="1"/><text x="55.5509%" y="623.50"></text></g><g><title>`0x7FFE55781310 (4 samples, 1.15%)</title><rect x="57.3066%" y="677" width="1.1461%" height="15" fill="rgb(233,208,19)" fg:x="200" fg:w="4"/><text x="57.5566%" y="687.50"></text></g><g><title>`0x7FFE55781460 (4 samples, 1.15%)</title><rect x="58.4527%" y="677" width="1.1461%" height="15" fill="rgb(216,164,2)" fg:x="204" fg:w="4"/><text x="58.7027%" y="687.50"></text></g><g><title>`0x7FFE5578148C (4 samples, 1.15%)</title><rect x="59.5989%" y="677" width="1.1461%" height="15" fill="rgb(220,129,5)" fg:x="208" fg:w="4"/><text x="59.8489%" y="687.50"></text></g><g><title>`0x7FFE557814E0 (2 samples, 0.57%)</title><rect x="60.7450%" y="677" width="0.5731%" height="15" fill="rgb(242,17,10)" fg:x="212" fg:w="2"/><text x="60.9950%" y="687.50"></text></g><g><title>`0x7FFE557814E4 (7 samples, 2.01%)</title><rect x="61.3181%" y="677" width="2.0057%" height="15" fill="rgb(242,107,0)" fg:x="214" fg:w="7"/><text x="61.5681%" y="687.50">`..</text></g><g><title>`0x7FFE557814F7 (3 samples, 0.86%)</title><rect x="63.3238%" y="677" width="0.8596%" height="15" fill="rgb(251,28,31)" fg:x="221" fg:w="3"/><text x="63.5738%" y="687.50"></text></g><g><title>`0x7FFE557814FC (7 samples, 2.01%)</title><rect x="64.1834%" y="677" width="2.0057%" height="15" fill="rgb(233,223,10)" fg:x="224" fg:w="7"/><text x="64.4334%" y="687.50">`..</text></g><g><title>`0x7FFE5578150E (1 samples, 0.29%)</title><rect x="66.1891%" y="677" width="0.2865%" height="15" fill="rgb(215,21,27)" fg:x="231" fg:w="1"/><text x="66.4391%" y="687.50"></text></g><g><title>`0x7FFE55781516 (2 samples, 0.57%)</title><rect x="66.4756%" y="677" width="0.5731%" height="15" fill="rgb(232,23,21)" fg:x="232" fg:w="2"/><text x="66.7256%" y="687.50"></text></g><g><title>`0x7FFE5578152E (1 samples, 0.29%)</title><rect x="67.0487%" y="677" width="0.2865%" height="15" fill="rgb(244,5,23)" fg:x="234" fg:w="1"/><text x="67.2987%" y="687.50"></text></g><g><title>`0x7FFE55781536 (3 samples, 0.86%)</title><rect x="67.3352%" y="677" width="0.8596%" height="15" fill="rgb(226,81,46)" fg:x="235" fg:w="3"/><text x="67.5852%" y="687.50"></text></g><g><title>`0x7FFE55781554 (1 samples, 0.29%)</title><rect x="68.1948%" y="677" width="0.2865%" height="15" fill="rgb(247,70,30)" fg:x="238" fg:w="1"/><text x="68.4448%" y="687.50"></text></g><g><title>`0x7FFE55781570 (2 samples, 0.57%)</title><rect x="68.4814%" y="677" width="0.5731%" height="15" fill="rgb(212,68,19)" fg:x="239" fg:w="2"/><text x="68.7314%" y="687.50"></text></g><g><title>`0x7FFE5578157F (1 samples, 0.29%)</title><rect x="69.0544%" y="677" width="0.2865%" height="15" fill="rgb(240,187,13)" fg:x="241" fg:w="1"/><text x="69.3044%" y="687.50"></text></g><g><title>`0x7FFE55781582 (2 samples, 0.57%)</title><rect x="69.3410%" y="677" width="0.5731%" height="15" fill="rgb(223,113,26)" fg:x="242" fg:w="2"/><text x="69.5910%" y="687.50"></text></g><g><title>`0x7FFE557815D5 (1 samples, 0.29%)</title><rect x="69.9140%" y="677" width="0.2865%" height="15" fill="rgb(206,192,2)" fg:x="244" fg:w="1"/><text x="70.1640%" y="687.50"></text></g><g><title>`0x7FFE557815E3 (1 samples, 0.29%)</title><rect x="70.2006%" y="677" width="0.2865%" height="15" fill="rgb(241,108,4)" fg:x="245" fg:w="1"/><text x="70.4506%" y="687.50"></text></g><g><title>`0x7FFE55781606 (1 samples, 0.29%)</title><rect x="70.4871%" y="677" width="0.2865%" height="15" fill="rgb(247,173,49)" fg:x="246" fg:w="1"/><text x="70.7371%" y="687.50"></text></g><g><title>`0x7FFE5578160A (1 samples, 0.29%)</title><rect x="70.7736%" y="677" width="0.2865%" height="15" fill="rgb(224,114,35)" fg:x="247" fg:w="1"/><text x="71.0236%" y="687.50"></text></g><g><title>iteration.exe`bevy_ecs::term_query::terms::impl$3::from_fetch(enum2$ (5 samples, 1.43%)</title><rect x="71.0602%" y="629" width="1.4327%" height="15" fill="rgb(245,159,27)" fg:x="248" fg:w="5"/><text x="71.3102%" y="639.50"></text></g><g><title>iteration.exe`enum2$&lt;bevy_ecs::term_query::terms::FetchedTerm&gt;::component(enum2$ (5 samples, 1.43%)</title><rect x="71.0602%" y="613" width="1.4327%" height="15" fill="rgb(245,172,44)" fg:x="248" fg:w="5"/><text x="71.3102%" y="623.50"></text></g><g><title>iteration.exe`bevy_ecs::term_query::terms::impl$14::from_fetches(smallvec::IntoIter&lt;array$&lt;enum2$ (9 samples, 2.58%)</title><rect x="71.0602%" y="661" width="2.5788%" height="15" fill="rgb(236,23,11)" fg:x="248" fg:w="9"/><text x="71.3102%" y="671.50">it..</text></g><g><title>iteration.exe`bevy_ecs::term_query::terms::impl$4::from_fetches(smallvec::IntoIter&lt;array$&lt;enum2$ (9 samples, 2.58%)</title><rect x="71.0602%" y="645" width="2.5788%" height="15" fill="rgb(205,117,38)" fg:x="248" fg:w="9"/><text x="71.3102%" y="655.50">it..</text></g><g><title>iteration.exe`smallvec::impl$47::next(smallvec::IntoIter&lt;array$&lt;enum2$ (4 samples, 1.15%)</title><rect x="72.4928%" y="629" width="1.1461%" height="15" fill="rgb(237,72,25)" fg:x="253" fg:w="4"/><text x="72.7428%" y="639.50"></text></g><g><title>iteration.exe`core::ptr::const_ptr::impl$0::add(enum2$ (2 samples, 0.57%)</title><rect x="73.0659%" y="613" width="0.5731%" height="15" fill="rgb(244,70,9)" fg:x="255" fg:w="2"/><text x="73.3159%" y="623.50"></text></g><g><title>iteration.exe`core::ptr::drop_in_place(smallvec::IntoIter&lt;array$&lt;enum2$ (2 samples, 0.57%)</title><rect x="73.6390%" y="661" width="0.5731%" height="15" fill="rgb(217,125,39)" fg:x="257" fg:w="2"/><text x="73.8890%" y="671.50"></text></g><g><title>iteration.exe`core::ptr::drop_in_place(smallvec::SmallVec&lt;array$&lt;enum2$ (2 samples, 0.57%)</title><rect x="73.6390%" y="645" width="0.5731%" height="15" fill="rgb(235,36,10)" fg:x="257" fg:w="2"/><text x="73.8890%" y="655.50"></text></g><g><title>`0x7FFE55781310 (2 samples, 0.57%)</title><rect x="74.4986%" y="597" width="0.5731%" height="15" fill="rgb(251,123,47)" fg:x="260" fg:w="2"/><text x="74.7486%" y="607.50"></text></g><g><title>`0x7FFE55781430 (1 samples, 0.29%)</title><rect x="75.0716%" y="597" width="0.2865%" height="15" fill="rgb(221,13,13)" fg:x="262" fg:w="1"/><text x="75.3216%" y="607.50"></text></g><g><title>`0x7FFE5578144D (4 samples, 1.15%)</title><rect x="75.3582%" y="597" width="1.1461%" height="15" fill="rgb(238,131,9)" fg:x="263" fg:w="4"/><text x="75.6082%" y="607.50"></text></g><g><title>`0x7FFE55781460 (1 samples, 0.29%)</title><rect x="76.5043%" y="597" width="0.2865%" height="15" fill="rgb(211,50,8)" fg:x="267" fg:w="1"/><text x="76.7543%" y="607.50"></text></g><g><title>`0x7FFE5578148C (3 samples, 0.86%)</title><rect x="76.7908%" y="597" width="0.8596%" height="15" fill="rgb(245,182,24)" fg:x="268" fg:w="3"/><text x="77.0408%" y="607.50"></text></g><g><title>`0x7FFE557814B5 (2 samples, 0.57%)</title><rect x="77.6504%" y="597" width="0.5731%" height="15" fill="rgb(242,14,37)" fg:x="271" fg:w="2"/><text x="77.9004%" y="607.50"></text></g><g><title>`0x7FFE557814E4 (18 samples, 5.16%)</title><rect x="78.2235%" y="597" width="5.1576%" height="15" fill="rgb(246,228,12)" fg:x="273" fg:w="18"/><text x="78.4735%" y="607.50">`0x7FF..</text></g><g><title>`0x7FFE557814F7 (7 samples, 2.01%)</title><rect x="83.3811%" y="597" width="2.0057%" height="15" fill="rgb(213,55,15)" fg:x="291" fg:w="7"/><text x="83.6311%" y="607.50">`..</text></g><g><title>`0x7FFE5578150E (6 samples, 1.72%)</title><rect x="85.3868%" y="597" width="1.7192%" height="15" fill="rgb(209,9,3)" fg:x="298" fg:w="6"/><text x="85.6368%" y="607.50"></text></g><g><title>`0x7FFE5578152E (1 samples, 0.29%)</title><rect x="87.1060%" y="597" width="0.2865%" height="15" fill="rgb(230,59,30)" fg:x="304" fg:w="1"/><text x="87.3560%" y="607.50"></text></g><g><title>`0x7FFE5578154D (3 samples, 0.86%)</title><rect x="87.3926%" y="597" width="0.8596%" height="15" fill="rgb(209,121,21)" fg:x="305" fg:w="3"/><text x="87.6426%" y="607.50"></text></g><g><title>`0x7FFE5578157F (2 samples, 0.57%)</title><rect x="88.2521%" y="597" width="0.5731%" height="15" fill="rgb(220,109,13)" fg:x="308" fg:w="2"/><text x="88.5021%" y="607.50"></text></g><g><title>`0x7FFE557815C1 (1 samples, 0.29%)</title><rect x="88.8252%" y="597" width="0.2865%" height="15" fill="rgb(232,18,1)" fg:x="310" fg:w="1"/><text x="89.0752%" y="607.50"></text></g><g><title>`0x7FFE557815D5 (2 samples, 0.57%)</title><rect x="89.1117%" y="597" width="0.5731%" height="15" fill="rgb(215,41,42)" fg:x="311" fg:w="2"/><text x="89.3617%" y="607.50"></text></g><g><title>`0x7FFE557815F1 (3 samples, 0.86%)</title><rect x="89.6848%" y="597" width="0.8596%" height="15" fill="rgb(224,123,36)" fg:x="313" fg:w="3"/><text x="89.9348%" y="607.50"></text></g><g><title>`0x7FFE5578160A (1 samples, 0.29%)</title><rect x="90.5444%" y="597" width="0.2865%" height="15" fill="rgb(240,125,3)" fg:x="316" fg:w="1"/><text x="90.7944%" y="607.50"></text></g><g><title>`0x7FFE5578160D (3 samples, 0.86%)</title><rect x="90.8309%" y="597" width="0.8596%" height="15" fill="rgb(205,98,50)" fg:x="317" fg:w="3"/><text x="91.0809%" y="607.50"></text></g><g><title>iteration.exe`bevy_ecs::term_query::iter::impl$4::next(bevy_ecs::term_query::iter::TermQueryIter&lt;tuple$&lt;ref$&lt;iteration::Velocity&gt;,ref_mut$ (285 samples, 81.66%)</title><rect x="10.3152%" y="709" width="81.6619%" height="15" fill="rgb(205,185,37)" fg:x="36" fg:w="285"/><text x="10.5652%" y="719.50">iteration.exe`bevy_ecs::term_query::iter::impl$4::next(bevy_ecs::term_query::iter::TermQueryIter&lt;tuple$&lt;ref$&lt;iteration::Velocity&gt;,ref_mu..</text></g><g><title>iteration.exe`enum2$&lt;core::option::Option&lt;smallvec::SmallVec&lt;array$&lt;enum2$&lt;bevy_ecs::term_query::terms::FetchedTerm&gt;,12&gt; &gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;smallvec::SmallVec&lt;array$&lt;enum2$&lt;bevy_ecs::term_query::terms::FetchedTerm&gt;,12&gt; &gt; &gt; &gt;, bevy_ecs::term_query::iter::impl$4::next::closure_env$0&lt;tuple$&lt;ref$&lt;iteration::Velocity&gt;,ref_mut$ (127 samples, 36.39%)</title><rect x="55.5874%" y="693" width="36.3897%" height="15" fill="rgb(238,207,15)" fg:x="194" fg:w="127"/><text x="55.8374%" y="703.50">iteration.exe`enum2$&lt;core::option::Option&lt;smallvec::SmallVe..</text></g><g><title>iteration.exe`bevy_ecs::term_query::iter::impl$4::next::closure$0(bevy_ecs::term_query::iter::impl$4::next::closure_env$0&lt;tuple$&lt;ref$&lt;iteration::Velocity&gt;,ref_mut$&lt;iteration::Position&gt; &gt; &gt;, smallvec::SmallVec&lt;array$&lt;enum2$ (73 samples, 20.92%)</title><rect x="71.0602%" y="677" width="20.9169%" height="15" fill="rgb(213,199,42)" fg:x="248" fg:w="73"/><text x="71.3102%" y="687.50">iteration.exe`bevy_ecs::term_quer..</text></g><g><title>iteration.exe`smallvec::impl$52::into_iter(smallvec::SmallVec&lt;array$&lt;enum2$ (62 samples, 17.77%)</title><rect x="74.2120%" y="661" width="17.7650%" height="15" fill="rgb(235,201,11)" fg:x="259" fg:w="62"/><text x="74.4620%" y="671.50">iteration.exe`smallvec::impl..</text></g><g><title>iteration.exe`smallvec::SmallVec&lt;array$&lt;enum2$&lt;bevy_ecs::term_query::terms::FetchedTerm&gt;,12&gt; &gt;::len (61 samples, 17.48%)</title><rect x="74.4986%" y="645" width="17.4785%" height="15" fill="rgb(207,46,11)" fg:x="260" fg:w="61"/><text x="74.7486%" y="655.50">iteration.exe`smallvec::Sma..</text></g><g><title>iteration.exe`smallvec::SmallVec&lt;array$&lt;enum2$&lt;bevy_ecs::term_query::terms::FetchedTerm&gt;,12&gt; &gt;::triple (61 samples, 17.48%)</title><rect x="74.4986%" y="629" width="17.4785%" height="15" fill="rgb(241,35,35)" fg:x="260" fg:w="61"/><text x="74.7486%" y="639.50">iteration.exe`smallvec::Sma..</text></g><g><title>iteration.exe`smallvec::SmallVec&lt;array$&lt;enum2$&lt;bevy_ecs::term_query::terms::FetchedTerm&gt;,12&gt; &gt;::spilled (61 samples, 17.48%)</title><rect x="74.4986%" y="613" width="17.4785%" height="15" fill="rgb(243,32,47)" fg:x="260" fg:w="61"/><text x="74.7486%" y="623.50">iteration.exe`smallvec::Sma..</text></g><g><title>iteration.exe`memcpy (1 samples, 0.29%)</title><rect x="91.6905%" y="597" width="0.2865%" height="15" fill="rgb(247,202,23)" fg:x="320" fg:w="1"/><text x="91.9405%" y="607.50"></text></g><g><title>iteration.exe`bevy_ecs::bundle::BundleSpawner::reserve_storage (1 samples, 0.29%)</title><rect x="91.9771%" y="677" width="0.2865%" height="15" fill="rgb(219,102,11)" fg:x="321" fg:w="1"/><text x="92.2271%" y="687.50"></text></g><g><title>iteration.exe`bevy_ecs::storage::table::Table::reserve (1 samples, 0.29%)</title><rect x="91.9771%" y="661" width="0.2865%" height="15" fill="rgb(243,110,44)" fg:x="321" fg:w="1"/><text x="92.2271%" y="671.50"></text></g><g><title>iteration.exe`bevy_ecs::storage::table::Column::reserve_exact (1 samples, 0.29%)</title><rect x="91.9771%" y="645" width="0.2865%" height="15" fill="rgb(222,74,54)" fg:x="321" fg:w="1"/><text x="92.2271%" y="655.50"></text></g><g><title>iteration.exe`alloc::vec::Vec&lt;core::cell::UnsafeCell&lt;bevy_ecs::component::Tick&gt;,alloc::alloc::Global&gt;::reserve_exact (1 samples, 0.29%)</title><rect x="91.9771%" y="629" width="0.2865%" height="15" fill="rgb(216,99,12)" fg:x="321" fg:w="1"/><text x="92.2271%" y="639.50"></text></g><g><title>iteration.exe`alloc::raw_vec::RawVec&lt;core::cell::UnsafeCell&lt;bevy_ecs::component::Tick&gt;,alloc::alloc::Global&gt;::reserve_exact&lt;core::cell::UnsafeCell&lt;bevy_ecs::component::Tick&gt;,alloc::alloc::Global&gt; (1 samples, 0.29%)</title><rect x="91.9771%" y="613" width="0.2865%" height="15" fill="rgb(226,22,26)" fg:x="321" fg:w="1"/><text x="92.2271%" y="623.50"></text></g><g><title>iteration.exe`alloc::raw_vec::RawVec&lt;core::cell::UnsafeCell&lt;bevy_ecs::component::Tick&gt;,alloc::alloc::Global&gt;::try_reserve_exact (1 samples, 0.29%)</title><rect x="91.9771%" y="597" width="0.2865%" height="15" fill="rgb(217,163,10)" fg:x="321" fg:w="1"/><text x="92.2271%" y="607.50"></text></g><g><title>iteration.exe`alloc::raw_vec::RawVec&lt;core::cell::UnsafeCell&lt;bevy_ecs::component::Tick&gt;,alloc::alloc::Global&gt;::grow_exact (1 samples, 0.29%)</title><rect x="91.9771%" y="581" width="0.2865%" height="15" fill="rgb(213,25,53)" fg:x="321" fg:w="1"/><text x="92.2271%" y="591.50"></text></g><g><title>iteration.exe`core::num::impl$11::checked_add (1 samples, 0.29%)</title><rect x="91.9771%" y="565" width="0.2865%" height="15" fill="rgb(252,105,26)" fg:x="321" fg:w="1"/><text x="92.2271%" y="575.50"></text></g><g><title>iteration.exe`core::num::impl$11::overflowing_add (1 samples, 0.29%)</title><rect x="91.9771%" y="549" width="0.2865%" height="15" fill="rgb(220,39,43)" fg:x="321" fg:w="1"/><text x="92.2271%" y="559.50"></text></g><g><title>`0x7FFE626D7DE4 (1 samples, 0.29%)</title><rect x="92.2636%" y="261" width="0.2865%" height="15" fill="rgb(229,68,48)" fg:x="322" fg:w="1"/><text x="92.5136%" y="271.50"></text></g><g><title>iteration.exe`bevy_ecs::world::World::spawn_batch(core::iter::adapters::map::Map&lt;core::ops::range::Range (3 samples, 0.86%)</title><rect x="91.9771%" y="709" width="0.8596%" height="15" fill="rgb(252,8,32)" fg:x="321" fg:w="3"/><text x="92.2271%" y="719.50"></text></g><g><title>iteration.exe`bevy_ecs::world::spawn_batch::SpawnBatchIter&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;i32&gt;,iteration::main::closure_env$0&gt; &gt;::new(bevy_ecs::world::World*, core::iter::adapters::map::Map&lt;core::ops::range::Range (3 samples, 0.86%)</title><rect x="91.9771%" y="693" width="0.8596%" height="15" fill="rgb(223,20,43)" fg:x="321" fg:w="3"/><text x="92.2271%" y="703.50"></text></g><g><title>iteration.exe`bevy_ecs::world::impl$0::default (2 samples, 0.57%)</title><rect x="92.2636%" y="677" width="0.5731%" height="15" fill="rgb(229,81,49)" fg:x="322" fg:w="2"/><text x="92.5136%" y="687.50"></text></g><g><title>iteration.exe`bevy_ecs::storage::impl$0::default (2 samples, 0.57%)</title><rect x="92.2636%" y="661" width="0.5731%" height="15" fill="rgb(236,28,36)" fg:x="322" fg:w="2"/><text x="92.5136%" y="671.50"></text></g><g><title>iteration.exe`bevy_ecs::storage::sparse_set::impl$22::default (2 samples, 0.57%)</title><rect x="92.2636%" y="645" width="0.5731%" height="15" fill="rgb(249,185,26)" fg:x="322" fg:w="2"/><text x="92.5136%" y="655.50"></text></g><g><title>iteration.exe`bevy_ecs::storage::sparse_set::impl$4::default (2 samples, 0.57%)</title><rect x="92.2636%" y="629" width="0.5731%" height="15" fill="rgb(249,174,33)" fg:x="322" fg:w="2"/><text x="92.5136%" y="639.50"></text></g><g><title>iteration.exe`bevy_ecs::storage::sparse_set::SparseSet&lt;bevy_ecs::component::ComponentId,bevy_ecs::storage::sparse_set::ComponentSparseSet&gt;::new (2 samples, 0.57%)</title><rect x="92.2636%" y="613" width="0.5731%" height="15" fill="rgb(233,201,37)" fg:x="322" fg:w="2"/><text x="92.5136%" y="623.50"></text></g><g><title>iteration.exe`bevy_ecs::archetype::Archetypes::get_id_or_insert(bevy_ecs::storage::table::TableId, alloc::vec::Vec&lt;bevy_ecs::component::ComponentId,alloc::alloc::Global&gt;, alloc::vec::Vec (2 samples, 0.57%)</title><rect x="92.2636%" y="597" width="0.5731%" height="15" fill="rgb(221,78,26)" fg:x="322" fg:w="2"/><text x="92.5136%" y="607.50"></text></g><g><title>iteration.exe`hashbrown::map::HashMap&lt;bevy_ecs::archetype::ArchetypeIdentity,bevy_ecs::archetype::ArchetypeId,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::entry (2 samples, 0.57%)</title><rect x="92.2636%" y="581" width="0.5731%" height="15" fill="rgb(250,127,30)" fg:x="322" fg:w="2"/><text x="92.5136%" y="591.50"></text></g><g><title>iteration.exe`hashbrown::map::make_hash(core::hash::BuildHasherDefault (2 samples, 0.57%)</title><rect x="92.2636%" y="565" width="0.5731%" height="15" fill="rgb(230,49,44)" fg:x="322" fg:w="2"/><text x="92.5136%" y="575.50"></text></g><g><title>iteration.exe`bevy_ecs::archetype::impl$40::hash (2 samples, 0.57%)</title><rect x="92.2636%" y="549" width="0.5731%" height="15" fill="rgb(229,67,23)" fg:x="322" fg:w="2"/><text x="92.5136%" y="559.50"></text></g><g><title>iteration.exe`alloc::boxed::impl$18::hash(alloc::boxed::Box&lt;slice2$ (2 samples, 0.57%)</title><rect x="92.2636%" y="533" width="0.5731%" height="15" fill="rgb(249,83,47)" fg:x="322" fg:w="2"/><text x="92.5136%" y="543.50"></text></g><g><title>iteration.exe`core::hash::impls::impl$4::hash(ref$&lt;slice2$ (2 samples, 0.57%)</title><rect x="92.2636%" y="517" width="0.5731%" height="15" fill="rgb(215,43,3)" fg:x="322" fg:w="2"/><text x="92.5136%" y="527.50"></text></g><g><title>iteration.exe`core::hash::Hasher::write_length_prefix (2 samples, 0.57%)</title><rect x="92.2636%" y="501" width="0.5731%" height="15" fill="rgb(238,154,13)" fg:x="322" fg:w="2"/><text x="92.5136%" y="511.50"></text></g><g><title>iteration.exe`ahash::fallback_hash::impl$1::write_usize (2 samples, 0.57%)</title><rect x="92.2636%" y="485" width="0.5731%" height="15" fill="rgb(219,56,2)" fg:x="322" fg:w="2"/><text x="92.5136%" y="495.50"></text></g><g><title>iteration.exe`ahash::fallback_hash::impl$1::write_u64 (2 samples, 0.57%)</title><rect x="92.2636%" y="469" width="0.5731%" height="15" fill="rgb(233,0,4)" fg:x="322" fg:w="2"/><text x="92.5136%" y="479.50"></text></g><g><title>iteration.exe`ahash::fallback_hash::AHasher::update (2 samples, 0.57%)</title><rect x="92.2636%" y="453" width="0.5731%" height="15" fill="rgb(235,30,7)" fg:x="322" fg:w="2"/><text x="92.5136%" y="463.50"></text></g><g><title>iteration.exe`once_cell::race::once_box::OnceBox&lt;array$&lt;array$&lt;u64,4&gt;,2&gt; &gt;::get_or_init&lt;array$&lt;array$&lt;u64,4&gt;,2&gt;,ahash::random_state::get_fixed_seeds::closure_env$0&gt; (2 samples, 0.57%)</title><rect x="92.2636%" y="437" width="0.5731%" height="15" fill="rgb(250,79,13)" fg:x="322" fg:w="2"/><text x="92.5136%" y="447.50"></text></g><g><title>iteration.exe`once_cell::race::once_box::OnceBox&lt;array$&lt;array$&lt;u64,4&gt;,2&gt; &gt;::get_or_try_init(once_cell::race::once_box::impl$3::get_or_init::closure_env$0&lt;array$&lt;array$ (2 samples, 0.57%)</title><rect x="92.2636%" y="421" width="0.5731%" height="15" fill="rgb(211,146,34)" fg:x="322" fg:w="2"/><text x="92.5136%" y="431.50"></text></g><g><title>iteration.exe`once_cell::race::once_box::impl$3::get_or_init::closure$0(once_cell::race::once_box::impl$3::get_or_init::closure_env$0&lt;array$&lt;array$ (2 samples, 0.57%)</title><rect x="92.2636%" y="405" width="0.5731%" height="15" fill="rgb(228,22,38)" fg:x="322" fg:w="2"/><text x="92.5136%" y="415.50"></text></g><g><title>iteration.exe`ahash::random_state::get_fixed_seeds::closure$0 (2 samples, 0.57%)</title><rect x="92.2636%" y="389" width="0.5731%" height="15" fill="rgb(235,168,5)" fg:x="322" fg:w="2"/><text x="92.5136%" y="399.50"></text></g><g><title>iteration.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,getrandom::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,getrandom::error::Error&gt; &gt;, ref$ (2 samples, 0.57%)</title><rect x="92.2636%" y="373" width="0.5731%" height="15" fill="rgb(221,155,16)" fg:x="322" fg:w="2"/><text x="92.5136%" y="383.50"></text></g><g><title>iteration.exe`getrandom::getrandom(ref_mut$&lt;slice2$ (2 samples, 0.57%)</title><rect x="92.2636%" y="357" width="0.5731%" height="15" fill="rgb(215,215,53)" fg:x="322" fg:w="2"/><text x="92.5136%" y="367.50"></text></g><g><title>iteration.exe`getrandom::imp::getrandom_inner(ref_mut$&lt;slice2$ (2 samples, 0.57%)</title><rect x="92.2636%" y="341" width="0.5731%" height="15" fill="rgb(223,4,10)" fg:x="322" fg:w="2"/><text x="92.5136%" y="351.50"></text></g><g><title>`0x7FFE626D177C (2 samples, 0.57%)</title><rect x="92.2636%" y="325" width="0.5731%" height="15" fill="rgb(234,103,6)" fg:x="322" fg:w="2"/><text x="92.5136%" y="335.50"></text></g><g><title>`0x7FFE626D18D6 (2 samples, 0.57%)</title><rect x="92.2636%" y="309" width="0.5731%" height="15" fill="rgb(227,97,0)" fg:x="322" fg:w="2"/><text x="92.5136%" y="319.50"></text></g><g><title>`0x7FFE626D55D3 (2 samples, 0.57%)</title><rect x="92.2636%" y="293" width="0.5731%" height="15" fill="rgb(234,150,53)" fg:x="322" fg:w="2"/><text x="92.5136%" y="303.50"></text></g><g><title>`0x7FFE626D7969 (2 samples, 0.57%)</title><rect x="92.2636%" y="277" width="0.5731%" height="15" fill="rgb(228,201,54)" fg:x="322" fg:w="2"/><text x="92.5136%" y="287.50"></text></g><g><title>`0x7FFE626D7E85 (1 samples, 0.29%)</title><rect x="92.5501%" y="261" width="0.2865%" height="15" fill="rgb(222,22,37)" fg:x="323" fg:w="1"/><text x="92.8001%" y="271.50"></text></g><g><title>`0x7FFE62EE5EF2 (1 samples, 0.29%)</title><rect x="92.5501%" y="245" width="0.2865%" height="15" fill="rgb(237,53,32)" fg:x="323" fg:w="1"/><text x="92.8001%" y="255.50"></text></g><g><title>`0x7FFE6597A24A (1 samples, 0.29%)</title><rect x="92.5501%" y="229" width="0.2865%" height="15" fill="rgb(233,25,53)" fg:x="323" fg:w="1"/><text x="92.8001%" y="239.50"></text></g><g><title>`0x7FFE65968C9C (1 samples, 0.29%)</title><rect x="92.5501%" y="213" width="0.2865%" height="15" fill="rgb(210,40,34)" fg:x="323" fg:w="1"/><text x="92.8001%" y="223.50"></text></g><g><title>`0x7FFE65978930 (1 samples, 0.29%)</title><rect x="92.5501%" y="197" width="0.2865%" height="15" fill="rgb(241,220,44)" fg:x="323" fg:w="1"/><text x="92.8001%" y="207.50"></text></g><g><title>`0x7FFE6597D61D (1 samples, 0.29%)</title><rect x="92.5501%" y="181" width="0.2865%" height="15" fill="rgb(235,28,35)" fg:x="323" fg:w="1"/><text x="92.8001%" y="191.50"></text></g><g><title>`0x7FFE659BCE0E (1 samples, 0.29%)</title><rect x="92.5501%" y="165" width="0.2865%" height="15" fill="rgb(210,56,17)" fg:x="323" fg:w="1"/><text x="92.8001%" y="175.50"></text></g><g><title>`0x7FFE659BD05D (1 samples, 0.29%)</title><rect x="92.5501%" y="149" width="0.2865%" height="15" fill="rgb(224,130,29)" fg:x="323" fg:w="1"/><text x="92.8001%" y="159.50"></text></g><g><title>`0x7FFE6597868F (1 samples, 0.29%)</title><rect x="92.5501%" y="133" width="0.2865%" height="15" fill="rgb(235,212,8)" fg:x="323" fg:w="1"/><text x="92.8001%" y="143.50"></text></g><g><title>`0x7FFE632A0CF5 (1 samples, 0.29%)</title><rect x="92.5501%" y="117" width="0.2865%" height="15" fill="rgb(223,33,50)" fg:x="323" fg:w="1"/><text x="92.8001%" y="127.50"></text></g><g><title>`0x7FFE6328D941 (1 samples, 0.29%)</title><rect x="92.5501%" y="101" width="0.2865%" height="15" fill="rgb(219,149,13)" fg:x="323" fg:w="1"/><text x="92.8001%" y="111.50"></text></g><g><title>`0x7FFE659AD6F6 (1 samples, 0.29%)</title><rect x="92.5501%" y="85" width="0.2865%" height="15" fill="rgb(250,156,29)" fg:x="323" fg:w="1"/><text x="92.8001%" y="95.50"></text></g><g><title>`0x7FFE659821BA (1 samples, 0.29%)</title><rect x="92.5501%" y="69" width="0.2865%" height="15" fill="rgb(216,193,19)" fg:x="323" fg:w="1"/><text x="92.8001%" y="79.50"></text></g><g><title>`0x7FFE65982047 (1 samples, 0.29%)</title><rect x="92.5501%" y="53" width="0.2865%" height="15" fill="rgb(216,135,14)" fg:x="323" fg:w="1"/><text x="92.8001%" y="63.50"></text></g><g><title>`0x7FFE659F27A4 (1 samples, 0.29%)</title><rect x="92.5501%" y="37" width="0.2865%" height="15" fill="rgb(241,47,5)" fg:x="323" fg:w="1"/><text x="92.8001%" y="47.50"></text></g><g><title>iteration.exe`bevy_ecs::archetype::Archetype::allocate (1 samples, 0.29%)</title><rect x="92.8367%" y="597" width="0.2865%" height="15" fill="rgb(233,42,35)" fg:x="324" fg:w="1"/><text x="93.0867%" y="607.50"></text></g><g><title>iteration.exe`alloc::vec::Vec&lt;bevy_ecs::archetype::ArchetypeEntity,alloc::alloc::Global&gt;::push (1 samples, 0.29%)</title><rect x="92.8367%" y="581" width="0.2865%" height="15" fill="rgb(231,13,6)" fg:x="324" fg:w="1"/><text x="93.0867%" y="591.50"></text></g><g><title>iteration.exe`core::ptr::write (1 samples, 0.29%)</title><rect x="92.8367%" y="565" width="0.2865%" height="15" fill="rgb(207,181,40)" fg:x="324" fg:w="1"/><text x="93.0867%" y="575.50"></text></g><g><title>iteration.exe`bevy_ecs::bundle::BundleInfo::write_components(bevy_ecs::storage::table::Table*, bevy_ecs::storage::sparse_set::SparseSets*, bevy_ecs::archetype::SpawnBundleStatus*, bevy_ecs::entity::Entity, bevy_ecs::storage::table::TableRow, bevy_ecs::component::Tick, tuple$ (2 samples, 0.57%)</title><rect x="93.1232%" y="597" width="0.5731%" height="15" fill="rgb(254,173,49)" fg:x="325" fg:w="2"/><text x="93.3732%" y="607.50"></text></g><g><title>iteration.exe`bevy_ecs::bundle::impl$17::get_components(tuple$&lt;iteration::Transform,iteration::Position,iteration::Rotation,iteration::Velocity&gt;, bevy_ecs::bundle::impl$4::write_components::closure_env$0&lt;tuple$ (2 samples, 0.57%)</title><rect x="93.1232%" y="581" width="0.5731%" height="15" fill="rgb(221,1,38)" fg:x="325" fg:w="2"/><text x="93.3732%" y="591.50"></text></g><g><title>iteration.exe`bevy_ecs::bundle::impl$1::get_components(iteration::Position, bevy_ecs::bundle::impl$4::write_components::closure_env$0&lt;tuple$ (1 samples, 0.29%)</title><rect x="93.4097%" y="565" width="0.2865%" height="15" fill="rgb(206,124,46)" fg:x="326" fg:w="1"/><text x="93.6597%" y="575.50"></text></g><g><title>iteration.exe`bevy_ptr::OwningPtr&lt;bevy_ptr::Aligned&gt;::make(iteration::Position, bevy_ecs::bundle::impl$1::get_components::closure_env$0&lt;iteration::Position,bevy_ecs::bundle::impl$4::write_components::closure_env$0&lt;tuple$ (1 samples, 0.29%)</title><rect x="93.4097%" y="549" width="0.2865%" height="15" fill="rgb(249,21,11)" fg:x="326" fg:w="1"/><text x="93.6597%" y="559.50"></text></g><g><title>iteration.exe`bevy_ecs::bundle::impl$1::get_components::closure$0(bevy_ecs::bundle::impl$1::get_components::closure_env$0&lt;iteration::Position,bevy_ecs::bundle::impl$4::write_components::closure_env$0&lt;tuple$&lt;iteration::Transform,iteration::Position,iteration::Rotation,iteration::Velocity&gt;,bevy_ecs::archetype::SpawnBundleStatus&gt; &gt;, bevy_ptr::OwningPtr (1 samples, 0.29%)</title><rect x="93.4097%" y="533" width="0.2865%" height="15" fill="rgb(222,201,40)" fg:x="326" fg:w="1"/><text x="93.6597%" y="543.50"></text></g><g><title>iteration.exe`bevy_ecs::bundle::impl$4::write_components::closure$0(bevy_ecs::bundle::impl$4::write_components::closure_env$0&lt;tuple$&lt;iteration::Transform,iteration::Position,iteration::Rotation,iteration::Velocity&gt;,bevy_ecs::archetype::SpawnBundleStatus&gt;*, bevy_ecs::component::StorageType, bevy_ptr::OwningPtr (1 samples, 0.29%)</title><rect x="93.4097%" y="517" width="0.2865%" height="15" fill="rgb(235,61,29)" fg:x="326" fg:w="1"/><text x="93.6597%" y="527.50"></text></g><g><title>iteration.exe`bevy_ecs::storage::table::Column::initialize(bevy_ecs::storage::table::TableRow, bevy_ptr::OwningPtr (1 samples, 0.29%)</title><rect x="93.4097%" y="501" width="0.2865%" height="15" fill="rgb(219,207,3)" fg:x="326" fg:w="1"/><text x="93.6597%" y="511.50"></text></g><g><title>iteration.exe`alloc::vec::impl$10::deref_mut(alloc::vec::Vec&lt;core::cell::UnsafeCell (1 samples, 0.29%)</title><rect x="93.4097%" y="485" width="0.2865%" height="15" fill="rgb(222,56,46)" fg:x="326" fg:w="1"/><text x="93.6597%" y="495.50"></text></g><g><title>iteration.exe`alloc::vec::Vec&lt;core::cell::UnsafeCell&lt;bevy_ecs::component::Tick&gt;,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.29%)</title><rect x="93.4097%" y="469" width="0.2865%" height="15" fill="rgb(239,76,54)" fg:x="326" fg:w="1"/><text x="93.6597%" y="479.50"></text></g><g><title>iteration.exe`alloc::raw_vec::RawVec&lt;core::cell::UnsafeCell&lt;bevy_ecs::component::Tick&gt;,alloc::alloc::Global&gt;::ptr (1 samples, 0.29%)</title><rect x="93.4097%" y="453" width="0.2865%" height="15" fill="rgb(231,124,27)" fg:x="326" fg:w="1"/><text x="93.6597%" y="463.50"></text></g><g><title>`0x7FFE557813F9 (1 samples, 0.29%)</title><rect x="93.4097%" y="437" width="0.2865%" height="15" fill="rgb(249,195,6)" fg:x="326" fg:w="1"/><text x="93.6597%" y="447.50"></text></g><g><title>iteration.exe`alloc::vec::Vec&lt;core::cell::UnsafeCell&lt;bevy_ecs::component::Tick&gt;,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.29%)</title><rect x="93.6963%" y="565" width="0.2865%" height="15" fill="rgb(237,174,47)" fg:x="327" fg:w="1"/><text x="93.9463%" y="575.50"></text></g><g><title>iteration.exe`alloc::raw_vec::RawVec&lt;core::cell::UnsafeCell&lt;bevy_ecs::component::Tick&gt;,alloc::alloc::Global&gt;::ptr (1 samples, 0.29%)</title><rect x="93.6963%" y="549" width="0.2865%" height="15" fill="rgb(206,201,31)" fg:x="327" fg:w="1"/><text x="93.9463%" y="559.50"></text></g><g><title>iteration.exe`bevy_ecs::world::World::term_query (5 samples, 1.43%)</title><rect x="92.8367%" y="709" width="1.4327%" height="15" fill="rgb(231,57,52)" fg:x="324" fg:w="5"/><text x="93.0867%" y="719.50"></text></g><g><title>iteration.exe`bevy_ecs::world::World::term_query_filtered (5 samples, 1.43%)</title><rect x="92.8367%" y="693" width="1.4327%" height="15" fill="rgb(248,177,22)" fg:x="324" fg:w="5"/><text x="93.0867%" y="703.50"></text></g><g><title>iteration.exe`bevy_ecs::world::spawn_batch::impl$1::drop&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;i32&gt;,iteration::main::closure_env$0&gt; &gt;(bevy_ecs::world::spawn_batch::SpawnBatchIter&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range (5 samples, 1.43%)</title><rect x="92.8367%" y="677" width="1.4327%" height="15" fill="rgb(215,211,37)" fg:x="324" fg:w="5"/><text x="93.0867%" y="687.50"></text></g><g><title>iteration.exe`core::iter::traits::iterator::impl$0::next(bevy_ecs::world::spawn_batch::SpawnBatchIter&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range (5 samples, 1.43%)</title><rect x="92.8367%" y="661" width="1.4327%" height="15" fill="rgb(241,128,51)" fg:x="324" fg:w="5"/><text x="93.0867%" y="671.50"></text></g><g><title>iteration.exe`bevy_ecs::world::spawn_batch::impl$2::next(bevy_ecs::world::spawn_batch::SpawnBatchIter&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range (5 samples, 1.43%)</title><rect x="92.8367%" y="645" width="1.4327%" height="15" fill="rgb(227,165,31)" fg:x="324" fg:w="5"/><text x="93.0867%" y="655.50"></text></g><g><title>iteration.exe`bevy_ecs::bundle::BundleSpawner::spawn(tuple$ (5 samples, 1.43%)</title><rect x="92.8367%" y="629" width="1.4327%" height="15" fill="rgb(228,167,24)" fg:x="324" fg:w="5"/><text x="93.0867%" y="639.50"></text></g><g><title>iteration.exe`bevy_ecs::bundle::BundleSpawner::spawn_non_existent(bevy_ecs::entity::Entity, tuple$ (5 samples, 1.43%)</title><rect x="92.8367%" y="613" width="1.4327%" height="15" fill="rgb(228,143,12)" fg:x="324" fg:w="5"/><text x="93.0867%" y="623.50"></text></g><g><title>iteration.exe`bevy_ecs::storage::table::Table::allocate (2 samples, 0.57%)</title><rect x="93.6963%" y="597" width="0.5731%" height="15" fill="rgb(249,149,8)" fg:x="327" fg:w="2"/><text x="93.9463%" y="607.50"></text></g><g><title>iteration.exe`alloc::vec::Vec&lt;core::cell::UnsafeCell&lt;bevy_ecs::component::Tick&gt;,alloc::alloc::Global&gt;::push(core::cell::UnsafeCell (2 samples, 0.57%)</title><rect x="93.6963%" y="581" width="0.5731%" height="15" fill="rgb(243,35,44)" fg:x="327" fg:w="2"/><text x="93.9463%" y="591.50"></text></g><g><title>iteration.exe`core::ptr::write(core::cell::UnsafeCell&lt;bevy_ecs::component::Tick&gt;*, core::cell::UnsafeCell (1 samples, 0.29%)</title><rect x="93.9828%" y="565" width="0.2865%" height="15" fill="rgb(246,89,9)" fg:x="328" fg:w="1"/><text x="94.2328%" y="575.50"></text></g><g><title>iteration.exe`core::ptr::drop_in_place&lt;bevy_ecs::world::World&gt; (1 samples, 0.29%)</title><rect x="94.2693%" y="709" width="0.2865%" height="15" fill="rgb(233,213,13)" fg:x="329" fg:w="1"/><text x="94.5193%" y="719.50"></text></g><g><title>iteration.exe`core::ptr::drop_in_place&lt;bevy_ecs::storage::Storages&gt; (1 samples, 0.29%)</title><rect x="94.2693%" y="693" width="0.2865%" height="15" fill="rgb(233,141,41)" fg:x="329" fg:w="1"/><text x="94.5193%" y="703.50"></text></g><g><title>iteration.exe`core::ptr::drop_in_place&lt;bevy_ecs::storage::table::Tables&gt; (1 samples, 0.29%)</title><rect x="94.2693%" y="677" width="0.2865%" height="15" fill="rgb(239,167,4)" fg:x="329" fg:w="1"/><text x="94.5193%" y="687.50"></text></g><g><title>iteration.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.29%)</title><rect x="94.2693%" y="661" width="0.2865%" height="15" fill="rgb(209,217,16)" fg:x="329" fg:w="1"/><text x="94.5193%" y="671.50"></text></g><g><title>iteration.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (1 samples, 0.29%)</title><rect x="94.2693%" y="645" width="0.2865%" height="15" fill="rgb(219,88,35)" fg:x="329" fg:w="1"/><text x="94.5193%" y="655.50"></text></g><g><title>iteration.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$ (1 samples, 0.29%)</title><rect x="94.2693%" y="629" width="0.2865%" height="15" fill="rgb(220,193,23)" fg:x="329" fg:w="1"/><text x="94.5193%" y="639.50"></text></g><g><title>iteration.exe`core::ptr::drop_in_place&lt;bevy_ecs::storage::table::Table&gt; (1 samples, 0.29%)</title><rect x="94.2693%" y="613" width="0.2865%" height="15" fill="rgb(230,90,52)" fg:x="329" fg:w="1"/><text x="94.5193%" y="623.50"></text></g><g><title>iteration.exe`core::ptr::drop_in_place(bevy_ecs::storage::sparse_set::ImmutableSparseSet (1 samples, 0.29%)</title><rect x="94.2693%" y="597" width="0.2865%" height="15" fill="rgb(252,106,19)" fg:x="329" fg:w="1"/><text x="94.5193%" y="607.50"></text></g><g><title>iteration.exe`core::ptr::drop_in_place(alloc::boxed::Box&lt;slice2$ (1 samples, 0.29%)</title><rect x="94.2693%" y="581" width="0.2865%" height="15" fill="rgb(206,74,20)" fg:x="329" fg:w="1"/><text x="94.5193%" y="591.50"></text></g><g><title>iteration.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$ (1 samples, 0.29%)</title><rect x="94.2693%" y="565" width="0.2865%" height="15" fill="rgb(230,138,44)" fg:x="329" fg:w="1"/><text x="94.5193%" y="575.50"></text></g><g><title>iteration.exe`core::ptr::drop_in_place (1 samples, 0.29%)</title><rect x="94.2693%" y="549" width="0.2865%" height="15" fill="rgb(235,182,43)" fg:x="329" fg:w="1"/><text x="94.5193%" y="559.50"></text></g><g><title>iteration.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;core::cell::UnsafeCell (1 samples, 0.29%)</title><rect x="94.2693%" y="533" width="0.2865%" height="15" fill="rgb(242,16,51)" fg:x="329" fg:w="1"/><text x="94.5193%" y="543.50"></text></g><g><title>iteration.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;core::cell::UnsafeCell (1 samples, 0.29%)</title><rect x="94.2693%" y="517" width="0.2865%" height="15" fill="rgb(248,9,4)" fg:x="329" fg:w="1"/><text x="94.5193%" y="527.50"></text></g><g><title>iteration.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;core::cell::UnsafeCell (1 samples, 0.29%)</title><rect x="94.2693%" y="501" width="0.2865%" height="15" fill="rgb(210,31,22)" fg:x="329" fg:w="1"/><text x="94.5193%" y="511.50"></text></g><g><title>iteration.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.29%)</title><rect x="94.2693%" y="485" width="0.2865%" height="15" fill="rgb(239,54,39)" fg:x="329" fg:w="1"/><text x="94.5193%" y="495.50"></text></g><g><title>iteration.exe`alloc::alloc::dealloc (1 samples, 0.29%)</title><rect x="94.2693%" y="469" width="0.2865%" height="15" fill="rgb(230,99,41)" fg:x="329" fg:w="1"/><text x="94.5193%" y="479.50"></text></g><g><title>`0x7FFE6598AB01 (1 samples, 0.29%)</title><rect x="94.2693%" y="453" width="0.2865%" height="15" fill="rgb(253,106,12)" fg:x="329" fg:w="1"/><text x="94.5193%" y="463.50"></text></g><g><title>`0x7FFE6598BE34 (1 samples, 0.29%)</title><rect x="94.2693%" y="437" width="0.2865%" height="15" fill="rgb(213,46,41)" fg:x="329" fg:w="1"/><text x="94.5193%" y="447.50"></text></g><g><title>`0x7FFE65989718 (1 samples, 0.29%)</title><rect x="94.2693%" y="421" width="0.2865%" height="15" fill="rgb(215,133,35)" fg:x="329" fg:w="1"/><text x="94.5193%" y="431.50"></text></g><g><title>`0x7FFE65994B0B (1 samples, 0.29%)</title><rect x="94.2693%" y="405" width="0.2865%" height="15" fill="rgb(213,28,5)" fg:x="329" fg:w="1"/><text x="94.5193%" y="415.50"></text></g><g><title>`0x7FFE659963EA (1 samples, 0.29%)</title><rect x="94.2693%" y="389" width="0.2865%" height="15" fill="rgb(215,77,49)" fg:x="329" fg:w="1"/><text x="94.5193%" y="399.50"></text></g><g><title>`0x7FFE65996498 (1 samples, 0.29%)</title><rect x="94.2693%" y="373" width="0.2865%" height="15" fill="rgb(248,100,22)" fg:x="329" fg:w="1"/><text x="94.5193%" y="383.50"></text></g><g><title>`0x7FFE659965D6 (1 samples, 0.29%)</title><rect x="94.2693%" y="357" width="0.2865%" height="15" fill="rgb(208,67,9)" fg:x="329" fg:w="1"/><text x="94.5193%" y="367.50"></text></g><g><title>`0x7FFE659EF114 (1 samples, 0.29%)</title><rect x="94.2693%" y="341" width="0.2865%" height="15" fill="rgb(219,133,21)" fg:x="329" fg:w="1"/><text x="94.5193%" y="351.50"></text></g><g><title>iteration.exe`std::sys::windows::stdio::is_console (1 samples, 0.29%)</title><rect x="94.8424%" y="549" width="0.2865%" height="15" fill="rgb(246,46,29)" fg:x="331" fg:w="1"/><text x="95.0924%" y="559.50"></text></g><g><title>`0x7FFE62EFD3B3 (1 samples, 0.29%)</title><rect x="94.8424%" y="533" width="0.2865%" height="15" fill="rgb(246,185,52)" fg:x="331" fg:w="1"/><text x="95.0924%" y="543.50"></text></g><g><title>`0x7FFE62EFD5BC (1 samples, 0.29%)</title><rect x="94.8424%" y="517" width="0.2865%" height="15" fill="rgb(252,136,11)" fg:x="331" fg:w="1"/><text x="95.0924%" y="527.50"></text></g><g><title>`0x7FFE62EFD6B1 (1 samples, 0.29%)</title><rect x="94.8424%" y="501" width="0.2865%" height="15" fill="rgb(219,138,53)" fg:x="331" fg:w="1"/><text x="95.0924%" y="511.50"></text></g><g><title>`0x7FFE659EEE34 (1 samples, 0.29%)</title><rect x="94.8424%" y="485" width="0.2865%" height="15" fill="rgb(211,51,23)" fg:x="331" fg:w="1"/><text x="95.0924%" y="495.50"></text></g><g><title>`0x7FFE659AAA68 (330 samples, 94.56%)</title><rect x="0.8596%" y="917" width="94.5559%" height="15" fill="rgb(247,221,28)" fg:x="3" fg:w="330"/><text x="1.1096%" y="927.50">`0x7FFE659AAA68</text></g><g><title>`0x7FFE647126AD (330 samples, 94.56%)</title><rect x="0.8596%" y="901" width="94.5559%" height="15" fill="rgb(251,222,45)" fg:x="3" fg:w="330"/><text x="1.1096%" y="911.50">`0x7FFE647126AD</text></g><g><title>iteration.exe`__scrt_common_main_seh() (326 samples, 93.41%)</title><rect x="2.0057%" y="885" width="93.4097%" height="15" fill="rgb(217,162,53)" fg:x="7" fg:w="326"/><text x="2.2557%" y="895.50">iteration.exe`__scrt_common_main_seh()</text></g><g><title>iteration.exe`invoke_main() (321 samples, 91.98%)</title><rect x="3.4384%" y="869" width="91.9771%" height="15" fill="rgb(229,93,14)" fg:x="12" fg:w="321"/><text x="3.6884%" y="879.50">iteration.exe`invoke_main()</text></g><g><title>iteration.exe`main (321 samples, 91.98%)</title><rect x="3.4384%" y="853" width="91.9771%" height="15" fill="rgb(209,67,49)" fg:x="12" fg:w="321"/><text x="3.6884%" y="863.50">iteration.exe`main</text></g><g><title>iteration.exe`std::rt::lang_start_internal (321 samples, 91.98%)</title><rect x="3.4384%" y="837" width="91.9771%" height="15" fill="rgb(213,87,29)" fg:x="12" fg:w="321"/><text x="3.6884%" y="847.50">iteration.exe`std::rt::lang_start_internal</text></g><g><title>iteration.exe`std::panic::catch_unwind (321 samples, 91.98%)</title><rect x="3.4384%" y="821" width="91.9771%" height="15" fill="rgb(205,151,52)" fg:x="12" fg:w="321"/><text x="3.6884%" y="831.50">iteration.exe`std::panic::catch_unwind</text></g><g><title>iteration.exe`std::panicking::try (321 samples, 91.98%)</title><rect x="3.4384%" y="805" width="91.9771%" height="15" fill="rgb(253,215,39)" fg:x="12" fg:w="321"/><text x="3.6884%" y="815.50">iteration.exe`std::panicking::try</text></g><g><title>iteration.exe`std::panicking::try::do_call (321 samples, 91.98%)</title><rect x="3.4384%" y="789" width="91.9771%" height="15" fill="rgb(221,220,41)" fg:x="12" fg:w="321"/><text x="3.6884%" y="799.50">iteration.exe`std::panicking::try::do_call</text></g><g><title>iteration.exe`std::rt::lang_start_internal::closure$2 (321 samples, 91.98%)</title><rect x="3.4384%" y="773" width="91.9771%" height="15" fill="rgb(218,133,21)" fg:x="12" fg:w="321"/><text x="3.6884%" y="783.50">iteration.exe`std::rt::lang_start_internal::closure$2</text></g><g><title>iteration.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (321 samples, 91.98%)</title><rect x="3.4384%" y="757" width="91.9771%" height="15" fill="rgb(221,193,43)" fg:x="12" fg:w="321"/><text x="3.6884%" y="767.50">iteration.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>iteration.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (321 samples, 91.98%)</title><rect x="3.4384%" y="741" width="91.9771%" height="15" fill="rgb(240,128,52)" fg:x="12" fg:w="321"/><text x="3.6884%" y="751.50">iteration.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>iteration.exe`iteration::main (321 samples, 91.98%)</title><rect x="3.4384%" y="725" width="91.9771%" height="15" fill="rgb(253,114,12)" fg:x="12" fg:w="321"/><text x="3.6884%" y="735.50">iteration.exe`iteration::main</text></g><g><title>iteration.exe`std::io::stdio::_eprint (3 samples, 0.86%)</title><rect x="94.5559%" y="709" width="0.8596%" height="15" fill="rgb(215,223,47)" fg:x="330" fg:w="3"/><text x="94.8059%" y="719.50"></text></g><g><title>iteration.exe`std::io::stdio::print_to (2 samples, 0.57%)</title><rect x="94.8424%" y="693" width="0.5731%" height="15" fill="rgb(248,225,23)" fg:x="331" fg:w="2"/><text x="95.0924%" y="703.50"></text></g><g><title>iteration.exe`std::io::stdio::impl$18::write_fmt (2 samples, 0.57%)</title><rect x="94.8424%" y="677" width="0.5731%" height="15" fill="rgb(250,108,0)" fg:x="331" fg:w="2"/><text x="95.0924%" y="687.50"></text></g><g><title>iteration.exe`std::io::Write::write_fmt (2 samples, 0.57%)</title><rect x="94.8424%" y="661" width="0.5731%" height="15" fill="rgb(228,208,7)" fg:x="331" fg:w="2"/><text x="95.0924%" y="671.50"></text></g><g><title>iteration.exe`core::fmt::write (2 samples, 0.57%)</title><rect x="94.8424%" y="645" width="0.5731%" height="15" fill="rgb(244,45,10)" fg:x="331" fg:w="2"/><text x="95.0924%" y="655.50"></text></g><g><title>iteration.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StderrLock&gt; (2 samples, 0.57%)</title><rect x="94.8424%" y="629" width="0.5731%" height="15" fill="rgb(207,125,25)" fg:x="331" fg:w="2"/><text x="95.0924%" y="639.50"></text></g><g><title>iteration.exe`std::io::stdio::impl$19::write_all (2 samples, 0.57%)</title><rect x="94.8424%" y="613" width="0.5731%" height="15" fill="rgb(210,195,18)" fg:x="331" fg:w="2"/><text x="95.0924%" y="623.50"></text></g><g><title>iteration.exe`std::io::stdio::impl$2::write_all (2 samples, 0.57%)</title><rect x="94.8424%" y="597" width="0.5731%" height="15" fill="rgb(249,80,12)" fg:x="331" fg:w="2"/><text x="95.0924%" y="607.50"></text></g><g><title>iteration.exe`std::io::Write::write_all&lt;std::sys::windows::stdio::Stderr&gt; (2 samples, 0.57%)</title><rect x="94.8424%" y="581" width="0.5731%" height="15" fill="rgb(221,65,9)" fg:x="331" fg:w="2"/><text x="95.0924%" y="591.50"></text></g><g><title>iteration.exe`std::sys::windows::stdio::write (2 samples, 0.57%)</title><rect x="94.8424%" y="565" width="0.5731%" height="15" fill="rgb(235,49,36)" fg:x="331" fg:w="2"/><text x="95.0924%" y="575.50"></text></g><g><title>iteration.exe`std::sys::windows::stdio::write_valid_utf8_to_console (1 samples, 0.29%)</title><rect x="95.1289%" y="549" width="0.2865%" height="15" fill="rgb(225,32,20)" fg:x="332" fg:w="1"/><text x="95.3789%" y="559.50"></text></g><g><title>iteration.exe`std::sys::windows::stdio::write_u16s (1 samples, 0.29%)</title><rect x="95.1289%" y="533" width="0.2865%" height="15" fill="rgb(215,141,46)" fg:x="332" fg:w="1"/><text x="95.3789%" y="543.50"></text></g><g><title>iteration.exe`std::sys::windows::cvt (1 samples, 0.29%)</title><rect x="95.1289%" y="517" width="0.2865%" height="15" fill="rgb(250,160,47)" fg:x="332" fg:w="1"/><text x="95.3789%" y="527.50"></text></g><g><title>iteration.exe`std::sys::windows::impl$2::is_zero (1 samples, 0.29%)</title><rect x="95.1289%" y="501" width="0.2865%" height="15" fill="rgb(216,222,40)" fg:x="332" fg:w="1"/><text x="95.3789%" y="511.50"></text></g><g><title>`0x7FFE62EFD2BE (1 samples, 0.29%)</title><rect x="95.1289%" y="485" width="0.2865%" height="15" fill="rgb(234,217,39)" fg:x="332" fg:w="1"/><text x="95.3789%" y="495.50"></text></g><g><title>`0x7FFE62EFD353 (1 samples, 0.29%)</title><rect x="95.1289%" y="469" width="0.2865%" height="15" fill="rgb(207,178,40)" fg:x="332" fg:w="1"/><text x="95.3789%" y="479.50"></text></g><g><title>`0x7FFE62EFD6B1 (1 samples, 0.29%)</title><rect x="95.1289%" y="453" width="0.2865%" height="15" fill="rgb(221,136,13)" fg:x="332" fg:w="1"/><text x="95.3789%" y="463.50"></text></g><g><title>`0x7FFE659EEE34 (1 samples, 0.29%)</title><rect x="95.1289%" y="437" width="0.2865%" height="15" fill="rgb(249,199,10)" fg:x="332" fg:w="1"/><text x="95.3789%" y="447.50"></text></g><g><title>`0x7FFE659C3E4D (1 samples, 0.29%)</title><rect x="95.4155%" y="901" width="0.2865%" height="15" fill="rgb(249,222,13)" fg:x="333" fg:w="1"/><text x="95.6655%" y="911.50"></text></g><g><title>`0x7FFE659FD5BC (1 samples, 0.29%)</title><rect x="95.4155%" y="885" width="0.2865%" height="15" fill="rgb(244,185,38)" fg:x="333" fg:w="1"/><text x="95.6655%" y="895.50"></text></g><g><title>`0x7FFE65A2D102 (1 samples, 0.29%)</title><rect x="95.7020%" y="869" width="0.2865%" height="15" fill="rgb(236,202,9)" fg:x="334" fg:w="1"/><text x="95.9520%" y="879.50"></text></g><g><title>`0x7FFE659FE5A1 (1 samples, 0.29%)</title><rect x="95.7020%" y="853" width="0.2865%" height="15" fill="rgb(250,229,37)" fg:x="334" fg:w="1"/><text x="95.9520%" y="863.50"></text></g><g><title>`0x7FFE65995066 (1 samples, 0.29%)</title><rect x="95.7020%" y="837" width="0.2865%" height="15" fill="rgb(206,174,23)" fg:x="334" fg:w="1"/><text x="95.9520%" y="847.50"></text></g><g><title>`0x7FFE659917B3 (1 samples, 0.29%)</title><rect x="95.7020%" y="821" width="0.2865%" height="15" fill="rgb(211,33,43)" fg:x="334" fg:w="1"/><text x="95.9520%" y="831.50"></text></g><g><title>`0x7FFE65A2D2DA (1 samples, 0.29%)</title><rect x="95.9885%" y="869" width="0.2865%" height="15" fill="rgb(245,58,50)" fg:x="335" fg:w="1"/><text x="96.2385%" y="879.50"></text></g><g><title>`0x7FFE659CF623 (1 samples, 0.29%)</title><rect x="95.9885%" y="853" width="0.2865%" height="15" fill="rgb(244,68,36)" fg:x="335" fg:w="1"/><text x="96.2385%" y="863.50"></text></g><g><title>`0x7FFE6597F620 (1 samples, 0.29%)</title><rect x="95.9885%" y="837" width="0.2865%" height="15" fill="rgb(232,229,15)" fg:x="335" fg:w="1"/><text x="96.2385%" y="847.50"></text></g><g><title>`0x7FFE6597F705 (1 samples, 0.29%)</title><rect x="95.9885%" y="821" width="0.2865%" height="15" fill="rgb(254,30,23)" fg:x="335" fg:w="1"/><text x="96.2385%" y="831.50"></text></g><g><title>`0x7FFE659F27A4 (1 samples, 0.29%)</title><rect x="95.9885%" y="805" width="0.2865%" height="15" fill="rgb(235,160,14)" fg:x="335" fg:w="1"/><text x="96.2385%" y="815.50"></text></g><g><title>`0x7FFE65A2D311 (1 samples, 0.29%)</title><rect x="96.2751%" y="869" width="0.2865%" height="15" fill="rgb(212,155,44)" fg:x="336" fg:w="1"/><text x="96.5251%" y="879.50"></text></g><g><title>`0x7FFE659A810A (1 samples, 0.29%)</title><rect x="96.2751%" y="853" width="0.2865%" height="15" fill="rgb(226,2,50)" fg:x="336" fg:w="1"/><text x="96.5251%" y="863.50"></text></g><g><title>`0x7FFE659A87CF (1 samples, 0.29%)</title><rect x="96.2751%" y="837" width="0.2865%" height="15" fill="rgb(234,177,6)" fg:x="336" fg:w="1"/><text x="96.5251%" y="847.50"></text></g><g><title>`0x7FFE659A8874 (1 samples, 0.29%)</title><rect x="96.2751%" y="821" width="0.2865%" height="15" fill="rgb(217,24,9)" fg:x="336" fg:w="1"/><text x="96.5251%" y="831.50"></text></g><g><title>`0x7FFE6596E878 (1 samples, 0.29%)</title><rect x="96.2751%" y="805" width="0.2865%" height="15" fill="rgb(220,13,46)" fg:x="336" fg:w="1"/><text x="96.5251%" y="815.50"></text></g><g><title>`0x7FFE659A8351 (1 samples, 0.29%)</title><rect x="96.2751%" y="789" width="0.2865%" height="15" fill="rgb(239,221,27)" fg:x="336" fg:w="1"/><text x="96.5251%" y="799.50"></text></g><g><title>`0x7FFE659A843F (1 samples, 0.29%)</title><rect x="96.2751%" y="773" width="0.2865%" height="15" fill="rgb(222,198,25)" fg:x="336" fg:w="1"/><text x="96.5251%" y="783.50"></text></g><g><title>`0x7FFE6598CD49 (1 samples, 0.29%)</title><rect x="96.2751%" y="757" width="0.2865%" height="15" fill="rgb(211,99,13)" fg:x="336" fg:w="1"/><text x="96.5251%" y="767.50"></text></g><g><title>`0x7FFE6598FA28 (1 samples, 0.29%)</title><rect x="96.2751%" y="741" width="0.2865%" height="15" fill="rgb(232,111,31)" fg:x="336" fg:w="1"/><text x="96.5251%" y="751.50"></text></g><g><title>`0x7FFE65999FCB (1 samples, 0.29%)</title><rect x="96.2751%" y="725" width="0.2865%" height="15" fill="rgb(245,82,37)" fg:x="336" fg:w="1"/><text x="96.5251%" y="735.50"></text></g><g><title>`0x7FFE65999531 (1 samples, 0.29%)</title><rect x="96.2751%" y="709" width="0.2865%" height="15" fill="rgb(227,149,46)" fg:x="336" fg:w="1"/><text x="96.5251%" y="719.50"></text></g><g><title>`0x7FFE65998FAA (1 samples, 0.29%)</title><rect x="96.2751%" y="693" width="0.2865%" height="15" fill="rgb(218,36,50)" fg:x="336" fg:w="1"/><text x="96.5251%" y="703.50"></text></g><g><title>`0x7FFE6599620F (1 samples, 0.29%)</title><rect x="96.2751%" y="677" width="0.2865%" height="15" fill="rgb(226,80,48)" fg:x="336" fg:w="1"/><text x="96.5251%" y="687.50"></text></g><g><title>`0x7FFE65995066 (1 samples, 0.29%)</title><rect x="96.2751%" y="661" width="0.2865%" height="15" fill="rgb(238,224,15)" fg:x="336" fg:w="1"/><text x="96.5251%" y="671.50"></text></g><g><title>`0x7FFE659917B3 (1 samples, 0.29%)</title><rect x="96.2751%" y="645" width="0.2865%" height="15" fill="rgb(241,136,10)" fg:x="336" fg:w="1"/><text x="96.5251%" y="655.50"></text></g><g><title>`0x7FFE65A2E072 (1 samples, 0.29%)</title><rect x="96.5616%" y="869" width="0.2865%" height="15" fill="rgb(208,32,45)" fg:x="337" fg:w="1"/><text x="96.8116%" y="879.50"></text></g><g><title>`0x7FFE659542C7 (1 samples, 0.29%)</title><rect x="96.5616%" y="853" width="0.2865%" height="15" fill="rgb(207,135,9)" fg:x="337" fg:w="1"/><text x="96.8116%" y="863.50"></text></g><g><title>`0x7FFE6597445A (1 samples, 0.29%)</title><rect x="96.5616%" y="837" width="0.2865%" height="15" fill="rgb(206,86,44)" fg:x="337" fg:w="1"/><text x="96.8116%" y="847.50"></text></g><g><title>`0x7FFE659746AB (1 samples, 0.29%)</title><rect x="96.8481%" y="757" width="0.2865%" height="15" fill="rgb(245,177,15)" fg:x="338" fg:w="1"/><text x="97.0981%" y="767.50"></text></g><g><title>`0x7FFE659748F6 (1 samples, 0.29%)</title><rect x="96.8481%" y="741" width="0.2865%" height="15" fill="rgb(206,64,50)" fg:x="338" fg:w="1"/><text x="97.0981%" y="751.50"></text></g><g><title>`0x7FFE659758B4 (1 samples, 0.29%)</title><rect x="96.8481%" y="725" width="0.2865%" height="15" fill="rgb(234,36,40)" fg:x="338" fg:w="1"/><text x="97.0981%" y="735.50"></text></g><g><title>`0x7FFE6597CE19 (1 samples, 0.29%)</title><rect x="96.8481%" y="709" width="0.2865%" height="15" fill="rgb(213,64,8)" fg:x="338" fg:w="1"/><text x="97.0981%" y="719.50"></text></g><g><title>`0x7FFE6597C389 (1 samples, 0.29%)</title><rect x="96.8481%" y="693" width="0.2865%" height="15" fill="rgb(210,75,36)" fg:x="338" fg:w="1"/><text x="97.0981%" y="703.50"></text></g><g><title>`0x7FFE6597AF9C (1 samples, 0.29%)</title><rect x="96.8481%" y="677" width="0.2865%" height="15" fill="rgb(229,88,21)" fg:x="338" fg:w="1"/><text x="97.0981%" y="687.50"></text></g><g><title>`0x7FFE6597BBFD (1 samples, 0.29%)</title><rect x="96.8481%" y="661" width="0.2865%" height="15" fill="rgb(252,204,47)" fg:x="338" fg:w="1"/><text x="97.0981%" y="671.50"></text></g><g><title>`0x7FFE659828FB (1 samples, 0.29%)</title><rect x="96.8481%" y="645" width="0.2865%" height="15" fill="rgb(208,77,27)" fg:x="338" fg:w="1"/><text x="97.0981%" y="655.50"></text></g><g><title>`0x7FFE659788A6 (2 samples, 0.57%)</title><rect x="96.8481%" y="821" width="0.5731%" height="15" fill="rgb(221,76,26)" fg:x="338" fg:w="2"/><text x="97.0981%" y="831.50"></text></g><g><title>`0x7FFE6597DD99 (2 samples, 0.57%)</title><rect x="96.8481%" y="805" width="0.5731%" height="15" fill="rgb(225,139,18)" fg:x="338" fg:w="2"/><text x="97.0981%" y="815.50"></text></g><g><title>`0x7FFE6597CE19 (2 samples, 0.57%)</title><rect x="96.8481%" y="789" width="0.5731%" height="15" fill="rgb(230,137,11)" fg:x="338" fg:w="2"/><text x="97.0981%" y="799.50"></text></g><g><title>`0x7FFE6597C3E8 (2 samples, 0.57%)</title><rect x="96.8481%" y="773" width="0.5731%" height="15" fill="rgb(212,28,1)" fg:x="338" fg:w="2"/><text x="97.0981%" y="783.50"></text></g><g><title>`0x7FFE65974764 (1 samples, 0.29%)</title><rect x="97.1347%" y="757" width="0.2865%" height="15" fill="rgb(248,164,17)" fg:x="339" fg:w="1"/><text x="97.3847%" y="767.50"></text></g><g><title>`0x7FFE65973D55 (1 samples, 0.29%)</title><rect x="97.1347%" y="741" width="0.2865%" height="15" fill="rgb(222,171,42)" fg:x="339" fg:w="1"/><text x="97.3847%" y="751.50"></text></g><g><title>`0x7FFE659788D0 (1 samples, 0.29%)</title><rect x="97.4212%" y="821" width="0.2865%" height="15" fill="rgb(243,84,45)" fg:x="340" fg:w="1"/><text x="97.6712%" y="831.50"></text></g><g><title>`0x7FFE6597A090 (1 samples, 0.29%)</title><rect x="97.4212%" y="805" width="0.2865%" height="15" fill="rgb(252,49,23)" fg:x="340" fg:w="1"/><text x="97.6712%" y="815.50"></text></g><g><title>`0x7FFE65960E7B (1 samples, 0.29%)</title><rect x="97.4212%" y="789" width="0.2865%" height="15" fill="rgb(215,19,7)" fg:x="340" fg:w="1"/><text x="97.6712%" y="799.50"></text></g><g><title>`0x7FFE65973CC7 (1 samples, 0.29%)</title><rect x="97.4212%" y="773" width="0.2865%" height="15" fill="rgb(238,81,41)" fg:x="340" fg:w="1"/><text x="97.6712%" y="783.50"></text></g><g><title>`0x7FFE62EFC2FD (1 samples, 0.29%)</title><rect x="97.7077%" y="725" width="0.2865%" height="15" fill="rgb(210,199,37)" fg:x="341" fg:w="1"/><text x="97.9577%" y="735.50"></text></g><g><title>`0x7FFE62EFC8D8 (1 samples, 0.29%)</title><rect x="97.7077%" y="709" width="0.2865%" height="15" fill="rgb(244,192,49)" fg:x="341" fg:w="1"/><text x="97.9577%" y="719.50"></text></g><g><title>`0x7FFE62F3AE9B (1 samples, 0.29%)</title><rect x="97.7077%" y="693" width="0.2865%" height="15" fill="rgb(226,211,11)" fg:x="341" fg:w="1"/><text x="97.9577%" y="703.50"></text></g><g><title>`0x7FFE6597F620 (1 samples, 0.29%)</title><rect x="97.7077%" y="677" width="0.2865%" height="15" fill="rgb(236,162,54)" fg:x="341" fg:w="1"/><text x="97.9577%" y="687.50"></text></g><g><title>`0x7FFE6597F705 (1 samples, 0.29%)</title><rect x="97.7077%" y="661" width="0.2865%" height="15" fill="rgb(220,229,9)" fg:x="341" fg:w="1"/><text x="97.9577%" y="671.50"></text></g><g><title>`0x7FFE659F27A4 (1 samples, 0.29%)</title><rect x="97.7077%" y="645" width="0.2865%" height="15" fill="rgb(250,87,22)" fg:x="341" fg:w="1"/><text x="97.9577%" y="655.50"></text></g><g><title>`0x7FFE65A2E13F (5 samples, 1.43%)</title><rect x="96.8481%" y="869" width="1.4327%" height="15" fill="rgb(239,43,17)" fg:x="338" fg:w="5"/><text x="97.0981%" y="879.50"></text></g><g><title>`0x7FFE6597A24A (5 samples, 1.43%)</title><rect x="96.8481%" y="853" width="1.4327%" height="15" fill="rgb(231,177,25)" fg:x="338" fg:w="5"/><text x="97.0981%" y="863.50"></text></g><g><title>`0x7FFE65968C9C (5 samples, 1.43%)</title><rect x="96.8481%" y="837" width="1.4327%" height="15" fill="rgb(219,179,1)" fg:x="338" fg:w="5"/><text x="97.0981%" y="847.50"></text></g><g><title>`0x7FFE65978930 (2 samples, 0.57%)</title><rect x="97.7077%" y="821" width="0.5731%" height="15" fill="rgb(238,219,53)" fg:x="341" fg:w="2"/><text x="97.9577%" y="831.50"></text></g><g><title>`0x7FFE6597D61D (2 samples, 0.57%)</title><rect x="97.7077%" y="805" width="0.5731%" height="15" fill="rgb(232,167,36)" fg:x="341" fg:w="2"/><text x="97.9577%" y="815.50"></text></g><g><title>`0x7FFE659BCE80 (2 samples, 0.57%)</title><rect x="97.7077%" y="789" width="0.5731%" height="15" fill="rgb(244,19,51)" fg:x="341" fg:w="2"/><text x="97.9577%" y="799.50"></text></g><g><title>`0x7FFE659BCE0E (2 samples, 0.57%)</title><rect x="97.7077%" y="773" width="0.5731%" height="15" fill="rgb(224,6,22)" fg:x="341" fg:w="2"/><text x="97.9577%" y="783.50"></text></g><g><title>`0x7FFE659BD05D (2 samples, 0.57%)</title><rect x="97.7077%" y="757" width="0.5731%" height="15" fill="rgb(224,145,5)" fg:x="341" fg:w="2"/><text x="97.9577%" y="767.50"></text></g><g><title>`0x7FFE6597868F (2 samples, 0.57%)</title><rect x="97.7077%" y="741" width="0.5731%" height="15" fill="rgb(234,130,49)" fg:x="341" fg:w="2"/><text x="97.9577%" y="751.50"></text></g><g><title>`0x7FFE62EFC3D3 (1 samples, 0.29%)</title><rect x="97.9943%" y="725" width="0.2865%" height="15" fill="rgb(254,6,2)" fg:x="342" fg:w="1"/><text x="98.2443%" y="735.50"></text></g><g><title>`0x7FFE62EFD08F (1 samples, 0.29%)</title><rect x="97.9943%" y="709" width="0.2865%" height="15" fill="rgb(208,96,46)" fg:x="342" fg:w="1"/><text x="98.2443%" y="719.50"></text></g><g><title>`0x7FFE62F3893C (1 samples, 0.29%)</title><rect x="97.9943%" y="693" width="0.2865%" height="15" fill="rgb(239,3,39)" fg:x="342" fg:w="1"/><text x="98.2443%" y="703.50"></text></g><g><title>`0x7FFE6597F620 (1 samples, 0.29%)</title><rect x="97.9943%" y="677" width="0.2865%" height="15" fill="rgb(233,210,1)" fg:x="342" fg:w="1"/><text x="98.2443%" y="687.50"></text></g><g><title>`0x7FFE6597F705 (1 samples, 0.29%)</title><rect x="97.9943%" y="661" width="0.2865%" height="15" fill="rgb(244,137,37)" fg:x="342" fg:w="1"/><text x="98.2443%" y="671.50"></text></g><g><title>`0x7FFE659F27A4 (1 samples, 0.29%)</title><rect x="97.9943%" y="645" width="0.2865%" height="15" fill="rgb(240,136,2)" fg:x="342" fg:w="1"/><text x="98.2443%" y="655.50"></text></g><g><title>`0x7FFE65A2E1E9 (1 samples, 0.29%)</title><rect x="98.2808%" y="869" width="0.2865%" height="15" fill="rgb(239,18,37)" fg:x="343" fg:w="1"/><text x="98.5308%" y="879.50"></text></g><g><title>`0x7FFE659685DC (1 samples, 0.29%)</title><rect x="98.2808%" y="853" width="0.2865%" height="15" fill="rgb(218,185,22)" fg:x="343" fg:w="1"/><text x="98.5308%" y="863.50"></text></g><g><title>`0x7FFE6597B8D1 (1 samples, 0.29%)</title><rect x="98.2808%" y="837" width="0.2865%" height="15" fill="rgb(225,218,4)" fg:x="343" fg:w="1"/><text x="98.5308%" y="847.50"></text></g><g><title>`0x7FFE6597B9E7 (1 samples, 0.29%)</title><rect x="98.2808%" y="821" width="0.2865%" height="15" fill="rgb(230,182,32)" fg:x="343" fg:w="1"/><text x="98.5308%" y="831.50"></text></g><g><title>`0x7FFE65972F99 (1 samples, 0.29%)</title><rect x="98.2808%" y="805" width="0.2865%" height="15" fill="rgb(242,56,43)" fg:x="343" fg:w="1"/><text x="98.5308%" y="815.50"></text></g><g><title>`0x7FFE65A2E46F (1 samples, 0.29%)</title><rect x="98.5673%" y="869" width="0.2865%" height="15" fill="rgb(233,99,24)" fg:x="344" fg:w="1"/><text x="98.8173%" y="879.50"></text></g><g><title>`0x7FFE6597451F (1 samples, 0.29%)</title><rect x="98.5673%" y="853" width="0.2865%" height="15" fill="rgb(234,209,42)" fg:x="344" fg:w="1"/><text x="98.8173%" y="863.50"></text></g><g><title>`0x7FFE659C153C (1 samples, 0.29%)</title><rect x="98.5673%" y="837" width="0.2865%" height="15" fill="rgb(227,7,12)" fg:x="344" fg:w="1"/><text x="98.8173%" y="847.50"></text></g><g><title>`0x7FFE64711109 (1 samples, 0.29%)</title><rect x="98.5673%" y="821" width="0.2865%" height="15" fill="rgb(245,203,43)" fg:x="344" fg:w="1"/><text x="98.8173%" y="831.50"></text></g><g><title>`0x7FFE62F20711 (1 samples, 0.29%)</title><rect x="98.5673%" y="805" width="0.2865%" height="15" fill="rgb(238,205,33)" fg:x="344" fg:w="1"/><text x="98.8173%" y="815.50"></text></g><g><title>`0x7FFE659823EA (1 samples, 0.29%)</title><rect x="98.5673%" y="789" width="0.2865%" height="15" fill="rgb(231,56,7)" fg:x="344" fg:w="1"/><text x="98.8173%" y="799.50"></text></g><g><title>`0x7FFE64716510 (1 samples, 0.29%)</title><rect x="98.5673%" y="773" width="0.2865%" height="15" fill="rgb(244,186,29)" fg:x="344" fg:w="1"/><text x="98.8173%" y="783.50"></text></g><g><title>`0x7FFE65960AEE (1 samples, 0.29%)</title><rect x="98.8539%" y="821" width="0.2865%" height="15" fill="rgb(234,111,31)" fg:x="345" fg:w="1"/><text x="99.1039%" y="831.50"></text></g><g><title>`0x7FFE6597D9D8 (1 samples, 0.29%)</title><rect x="98.8539%" y="805" width="0.2865%" height="15" fill="rgb(241,149,10)" fg:x="345" fg:w="1"/><text x="99.1039%" y="815.50"></text></g><g><title>`0x7FFE659CA8FA (1 samples, 0.29%)</title><rect x="98.8539%" y="789" width="0.2865%" height="15" fill="rgb(249,206,44)" fg:x="345" fg:w="1"/><text x="99.1039%" y="799.50"></text></g><g><title>`0x7FFE65981698 (1 samples, 0.29%)</title><rect x="98.8539%" y="773" width="0.2865%" height="15" fill="rgb(251,153,30)" fg:x="345" fg:w="1"/><text x="99.1039%" y="783.50"></text></g><g><title>`0x7FFE6598191F (1 samples, 0.29%)</title><rect x="98.8539%" y="757" width="0.2865%" height="15" fill="rgb(239,152,38)" fg:x="345" fg:w="1"/><text x="99.1039%" y="767.50"></text></g><g><title>`0x7FFE659B9D9B (1 samples, 0.29%)</title><rect x="98.8539%" y="741" width="0.2865%" height="15" fill="rgb(249,139,47)" fg:x="345" fg:w="1"/><text x="99.1039%" y="751.50"></text></g><g><title>`0x7FFE659B9F29 (1 samples, 0.29%)</title><rect x="98.8539%" y="725" width="0.2865%" height="15" fill="rgb(244,64,35)" fg:x="345" fg:w="1"/><text x="99.1039%" y="735.50"></text></g><g><title>`0x7FFE6596E7CF (1 samples, 0.29%)</title><rect x="98.8539%" y="709" width="0.2865%" height="15" fill="rgb(216,46,15)" fg:x="345" fg:w="1"/><text x="99.1039%" y="719.50"></text></g><g><title>`0x7FFE6596EA33 (1 samples, 0.29%)</title><rect x="98.8539%" y="693" width="0.2865%" height="15" fill="rgb(250,74,19)" fg:x="345" fg:w="1"/><text x="99.1039%" y="703.50"></text></g><g><title>`0x7FFE65A2E477 (2 samples, 0.57%)</title><rect x="98.8539%" y="869" width="0.5731%" height="15" fill="rgb(249,42,33)" fg:x="345" fg:w="2"/><text x="99.1039%" y="879.50"></text></g><g><title>`0x7FFE6597A090 (2 samples, 0.57%)</title><rect x="98.8539%" y="853" width="0.5731%" height="15" fill="rgb(242,149,17)" fg:x="345" fg:w="2"/><text x="99.1039%" y="863.50"></text></g><g><title>`0x7FFE65960F80 (2 samples, 0.57%)</title><rect x="98.8539%" y="837" width="0.5731%" height="15" fill="rgb(244,29,21)" fg:x="345" fg:w="2"/><text x="99.1039%" y="847.50"></text></g><g><title>`0x7FFE65960BB8 (1 samples, 0.29%)</title><rect x="99.1404%" y="821" width="0.2865%" height="15" fill="rgb(220,130,37)" fg:x="346" fg:w="1"/><text x="99.3904%" y="831.50"></text></g><g><title>`0x7FFE659606FF (1 samples, 0.29%)</title><rect x="99.1404%" y="805" width="0.2865%" height="15" fill="rgb(211,67,2)" fg:x="346" fg:w="1"/><text x="99.3904%" y="815.50"></text></g><g><title>`0x7FFE6597C389 (1 samples, 0.29%)</title><rect x="99.1404%" y="789" width="0.2865%" height="15" fill="rgb(235,68,52)" fg:x="346" fg:w="1"/><text x="99.3904%" y="799.50"></text></g><g><title>`0x7FFE6597AF36 (1 samples, 0.29%)</title><rect x="99.1404%" y="773" width="0.2865%" height="15" fill="rgb(246,142,3)" fg:x="346" fg:w="1"/><text x="99.3904%" y="783.50"></text></g><g><title>`0x7FFE6597B193 (1 samples, 0.29%)</title><rect x="99.1404%" y="757" width="0.2865%" height="15" fill="rgb(241,25,7)" fg:x="346" fg:w="1"/><text x="99.3904%" y="767.50"></text></g><g><title>`0x7FFE659BCE0E (1 samples, 0.29%)</title><rect x="99.4269%" y="837" width="0.2865%" height="15" fill="rgb(242,119,39)" fg:x="347" fg:w="1"/><text x="99.6769%" y="847.50"></text></g><g><title>`0x7FFE659BD05D (1 samples, 0.29%)</title><rect x="99.4269%" y="821" width="0.2865%" height="15" fill="rgb(241,98,45)" fg:x="347" fg:w="1"/><text x="99.6769%" y="831.50"></text></g><g><title>`0x7FFE6597868F (1 samples, 0.29%)</title><rect x="99.4269%" y="805" width="0.2865%" height="15" fill="rgb(254,28,30)" fg:x="347" fg:w="1"/><text x="99.6769%" y="815.50"></text></g><g><title>`0x7FFE626DA067 (1 samples, 0.29%)</title><rect x="99.4269%" y="789" width="0.2865%" height="15" fill="rgb(241,142,54)" fg:x="347" fg:w="1"/><text x="99.6769%" y="799.50"></text></g><g><title>`0x7FFE626D35BC (1 samples, 0.29%)</title><rect x="99.4269%" y="773" width="0.2865%" height="15" fill="rgb(222,85,15)" fg:x="347" fg:w="1"/><text x="99.6769%" y="783.50"></text></g><g><title>`0x7FFE626D3839 (1 samples, 0.29%)</title><rect x="99.4269%" y="757" width="0.2865%" height="15" fill="rgb(210,85,47)" fg:x="347" fg:w="1"/><text x="99.6769%" y="767.50"></text></g><g><title>`0x7FFE626D3953 (1 samples, 0.29%)</title><rect x="99.4269%" y="741" width="0.2865%" height="15" fill="rgb(224,206,25)" fg:x="347" fg:w="1"/><text x="99.6769%" y="751.50"></text></g><g><title>`0x7FFE626D64A4 (1 samples, 0.29%)</title><rect x="99.4269%" y="725" width="0.2865%" height="15" fill="rgb(243,201,19)" fg:x="347" fg:w="1"/><text x="99.6769%" y="735.50"></text></g><g><title>`0x7FFE626D66B2 (1 samples, 0.29%)</title><rect x="99.4269%" y="709" width="0.2865%" height="15" fill="rgb(236,59,4)" fg:x="347" fg:w="1"/><text x="99.6769%" y="719.50"></text></g><g><title>`0x7FFE659EF3B4 (1 samples, 0.29%)</title><rect x="99.4269%" y="693" width="0.2865%" height="15" fill="rgb(254,179,45)" fg:x="347" fg:w="1"/><text x="99.6769%" y="703.50"></text></g><g><title>all (349 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(226,14,10)" fg:x="0" fg:w="349"/><text x="0.2500%" y="943.50"></text></g><g><title>`0x7FFE659C3DEE (16 samples, 4.58%)</title><rect x="95.4155%" y="917" width="4.5845%" height="15" fill="rgb(244,27,41)" fg:x="333" fg:w="16"/><text x="95.6655%" y="927.50">`0x7F..</text></g><g><title>`0x7FFE659C3EC3 (15 samples, 4.30%)</title><rect x="95.7020%" y="901" width="4.2980%" height="15" fill="rgb(235,35,32)" fg:x="334" fg:w="15"/><text x="95.9520%" y="911.50">`0x7F..</text></g><g><title>`0x7FFE65A19B44 (15 samples, 4.30%)</title><rect x="95.7020%" y="885" width="4.2980%" height="15" fill="rgb(218,68,31)" fg:x="334" fg:w="15"/><text x="95.9520%" y="895.50">`0x7F..</text></g><g><title>`0x7FFE65A2E5F5 (2 samples, 0.57%)</title><rect x="99.4269%" y="869" width="0.5731%" height="15" fill="rgb(207,120,37)" fg:x="347" fg:w="2"/><text x="99.6769%" y="879.50"></text></g><g><title>`0x7FFE659BCE80 (2 samples, 0.57%)</title><rect x="99.4269%" y="853" width="0.5731%" height="15" fill="rgb(227,98,0)" fg:x="347" fg:w="2"/><text x="99.6769%" y="863.50"></text></g><g><title>`0x7FFE659BCE80 (1 samples, 0.29%)</title><rect x="99.7135%" y="837" width="0.2865%" height="15" fill="rgb(207,7,3)" fg:x="348" fg:w="1"/><text x="99.9635%" y="847.50"></text></g><g><title>`0x7FFE659BCE0E (1 samples, 0.29%)</title><rect x="99.7135%" y="821" width="0.2865%" height="15" fill="rgb(206,98,19)" fg:x="348" fg:w="1"/><text x="99.9635%" y="831.50"></text></g><g><title>`0x7FFE659BD05D (1 samples, 0.29%)</title><rect x="99.7135%" y="805" width="0.2865%" height="15" fill="rgb(217,5,26)" fg:x="348" fg:w="1"/><text x="99.9635%" y="815.50"></text></g><g><title>`0x7FFE6597868F (1 samples, 0.29%)</title><rect x="99.7135%" y="789" width="0.2865%" height="15" fill="rgb(235,190,38)" fg:x="348" fg:w="1"/><text x="99.9635%" y="799.50"></text></g><g><title>`0x7FFE633A7853 (1 samples, 0.29%)</title><rect x="99.7135%" y="773" width="0.2865%" height="15" fill="rgb(247,86,24)" fg:x="348" fg:w="1"/><text x="99.9635%" y="783.50"></text></g><g><title>`0x7FFE633A816A (1 samples, 0.29%)</title><rect x="99.7135%" y="757" width="0.2865%" height="15" fill="rgb(205,101,16)" fg:x="348" fg:w="1"/><text x="99.9635%" y="767.50"></text></g><g><title>`0x7FFE63396544 (1 samples, 0.29%)</title><rect x="99.7135%" y="741" width="0.2865%" height="15" fill="rgb(246,168,33)" fg:x="348" fg:w="1"/><text x="99.9635%" y="751.50"></text></g><g><title>`0x7FFE633966CF (1 samples, 0.29%)</title><rect x="99.7135%" y="725" width="0.2865%" height="15" fill="rgb(231,114,1)" fg:x="348" fg:w="1"/><text x="99.9635%" y="735.50"></text></g><g><title>`0x7FFE63396941 (1 samples, 0.29%)</title><rect x="99.7135%" y="709" width="0.2865%" height="15" fill="rgb(207,184,53)" fg:x="348" fg:w="1"/><text x="99.9635%" y="719.50"></text></g><g><title>`0x7FFE63398360 (1 samples, 0.29%)</title><rect x="99.7135%" y="693" width="0.2865%" height="15" fill="rgb(224,95,51)" fg:x="348" fg:w="1"/><text x="99.9635%" y="703.50"></text></g><g><title>`0x7FFE63398B0D (1 samples, 0.29%)</title><rect x="99.7135%" y="677" width="0.2865%" height="15" fill="rgb(212,188,45)" fg:x="348" fg:w="1"/><text x="99.9635%" y="687.50"></text></g><g><title>`0x7FFE633986FF (1 samples, 0.29%)</title><rect x="99.7135%" y="661" width="0.2865%" height="15" fill="rgb(223,154,38)" fg:x="348" fg:w="1"/><text x="99.9635%" y="671.50"></text></g><g><title>`0x7FFE6339896D (1 samples, 0.29%)</title><rect x="99.7135%" y="645" width="0.2865%" height="15" fill="rgb(251,22,52)" fg:x="348" fg:w="1"/><text x="99.9635%" y="655.50"></text></g><g><title>`0x7FFE633B1843 (1 samples, 0.29%)</title><rect x="99.7135%" y="629" width="0.2865%" height="15" fill="rgb(229,209,22)" fg:x="348" fg:w="1"/><text x="99.9635%" y="639.50"></text></g><g><title>`0x7FFE62EE5DD5 (1 samples, 0.29%)</title><rect x="99.7135%" y="613" width="0.2865%" height="15" fill="rgb(234,138,34)" fg:x="348" fg:w="1"/><text x="99.9635%" y="623.50"></text></g><g><title>`0x7FFE6596A826 (1 samples, 0.29%)</title><rect x="99.7135%" y="597" width="0.2865%" height="15" fill="rgb(212,95,11)" fg:x="348" fg:w="1"/><text x="99.9635%" y="607.50"></text></g></svg></svg>